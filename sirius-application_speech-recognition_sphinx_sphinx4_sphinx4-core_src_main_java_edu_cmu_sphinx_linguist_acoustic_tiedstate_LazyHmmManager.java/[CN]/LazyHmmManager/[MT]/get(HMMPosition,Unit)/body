{
  HMM hmm=super.get(position,unit);
  if (null != hmm)   return hmm;
  int[] ids=new int[3];
  ids[1]=symbolTable.get(unit.getName());
  if (unit.isContextDependent()) {
    LeftRightContext context=(LeftRightContext)unit.getContext();
    Unit left=context.getLeftContext()[0];
    Unit right=context.getRightContext()[0];
    ids[0]=symbolTable.get(left.getName());
    ids[2]=symbolTable.get(right.getName());
  }
 else {
    ids[0]=symbolTable.get("SIL");
    ids[2]=symbolTable.get("SIL");
  }
  int[] pdfs=new int[3];
  pdfs[0]=eventMap.map(0,ids);
  pdfs[1]=eventMap.map(1,ids);
  pdfs[2]=eventMap.map(2,ids);
  Senone[] senones=new Senone[3];
  senones[0]=senonePool.get(pdfs[0]);
  senones[1]=senonePool.get(pdfs[1]);
  senones[2]=senonePool.get(pdfs[2]);
  SenoneSequence ss=new SenoneSequence(senones);
  float[][] transitionMatrix;
  transitionMatrix=transitionModel.getTransitionMatrix(ids[1],pdfs);
  hmm=new SenoneHMM(unit,ss,transitionMatrix,position);
  put(hmm);
  return hmm;
}
