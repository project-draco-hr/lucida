{
  QuestionInterpretationG queryGenerator=new QuestionInterpretationG();
  ArrayList<Query> results=new ArrayList<Query>();
  File[] files=FileUtils.getFiles(dir);
  BufferedReader in;
  String[] tuple, context, kws;
  String prop, line, target, as, regex, queryString;
  QuestionInterpretation qi;
  Query query;
  try {
    for (    File file : files) {
      prop=file.getName();
      in=new BufferedReader(new FileReader(file));
      while (in.ready()) {
        line=in.readLine().trim();
        if (line.length() == 0 || line.startsWith("//"))         continue;
        tuple=line.split("#",-1);
        target=tuple[0];
        context=new String[tuple.length - 3];
        for (int i=1; i < tuple.length - 2; i++)         context[i - 1]=tuple[i];
        as=tuple[tuple.length - 2];
        regex=tuple[tuple.length - 1];
        if (as.equals(""))         as=RegexConverter.regexToQueryStr(regex);
 else         if (regex.equals(""))         regex=RegexConverter.strToRegex(as);
        qi=new QuestionInterpretation(target,context,prop);
        kws=new String[]{"\"" + as + "\""};
        queryString=queryGenerator.queryString(target,context,kws);
        query=new Query(queryString,null,0);
        query.setInterpretation(qi);
        results.add(query);
        ass.put(queryString,as);
        regexs.put(queryString,regex);
      }
    }
  }
 catch (  IOException e) {
    return new Query[0];
  }
  return results.toArray(new Query[results.size()]);
}
