{
  ComparableUnion cu=ComparableUnion.string_field("a");
  ComparableUnion cu2=ComparableUnion.string_field("b");
  assertTrue(cu.compareTo(cu) == 0);
  assertTrue(cu2.compareTo(cu2) == 0);
  assertTrue(cu.compareTo(cu2) < 0);
  assertTrue(cu2.compareTo(cu) > 0);
  cu2=ComparableUnion.binary_field(ByteBuffer.wrap(new byte[]{2}));
  assertTrue(cu.compareTo(cu2) < 0);
  assertTrue(cu2.compareTo(cu) > 0);
  cu=ComparableUnion.binary_field(ByteBuffer.wrap(new byte[]{1}));
  assertTrue(cu.compareTo(cu2) < 0);
  assertTrue(cu2.compareTo(cu) > 0);
  TestUnion union1=new TestUnion(TestUnion._Fields.STRUCT_LIST,new ArrayList<RandomStuff>());
  TestUnion union2=new TestUnion(TestUnion._Fields.STRUCT_LIST,new ArrayList<RandomStuff>());
  assertTrue(union1.compareTo(union2) == 0);
  TestUnion union3=new TestUnion(TestUnion._Fields.I32_SET,new HashSet<Integer>());
  Set<Integer> i32_set=new HashSet<Integer>();
  i32_set.add(1);
  TestUnion union4=new TestUnion(TestUnion._Fields.I32_SET,i32_set);
  assertTrue(union3.compareTo(union4) < 0);
  Map<Integer,Integer> i32_map=new HashMap<Integer,Integer>();
  i32_map.put(1,1);
  TestUnion union5=new TestUnion(TestUnion._Fields.I32_MAP,i32_map);
  TestUnion union6=new TestUnion(TestUnion._Fields.I32_MAP,new HashMap<Integer,Integer>());
  assertTrue(union5.compareTo(union6) > 0);
}
