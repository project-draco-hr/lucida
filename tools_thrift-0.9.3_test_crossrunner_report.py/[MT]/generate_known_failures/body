def generate_known_failures(testdir, overwrite, save, out):

    def collect_failures(results):
        success_index = 5
        for r in results:
            if (not r[success_index]):
                yield TestEntry.get_name(*r)
    try:
        with open(os.path.join(testdir, RESULT_JSON), 'r') as fp:
            results = json.load(fp)
    except IOError:
        sys.stderr.write('Unable to load last result. Did you run tests ?\n')
        return False
    fails = collect_failures(results['results'])
    if (not overwrite):
        known = load_known_failures(testdir)
        known.extend(fails)
        fails = known
    fails_json = json.dumps(sorted(set(fails)), indent=2, separators=(',', ': '))
    if save:
        with open(os.path.join(testdir, (FAIL_JSON % platform.system())), 'w+') as fp:
            fp.write(fails_json)
        sys.stdout.write('Successfully updated known failures.\n')
    if out:
        sys.stdout.write(fails_json)
        sys.stdout.write('\n')
    return True
