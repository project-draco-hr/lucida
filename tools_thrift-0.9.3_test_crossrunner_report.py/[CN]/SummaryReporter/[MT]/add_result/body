def add_result(self, index, returncode, expired):
    self._lock.acquire()
    try:
        failed = ((returncode is None) or (returncode != 0))
        test = self._tests[index]
        known = (test.name in self._known_failures)
        if failed:
            if known:
                self._log.debug(('%s failed as expected' % test.name))
                self._expected_failure.append(index)
            else:
                self._log.info(('unexpected failure: %s' % test.name))
                self._unexpected_failure.append(index)
        elif known:
            self._log.info(('unexpected success: %s' % test.name))
            self._unexpected_success.append(index)
        test.success = (not failed)
        test.returncode = returncode
        test.expired = expired
        test.as_expected = (known == failed)
        if (not self.concurrent):
            result = ('success' if (not failed) else 'failure')
            result_string = ('%s(%d)' % (result, returncode))
            self.out.write((result_string + '\n'))
        else:
            self.out.write(self._format_test(test))
    finally:
        self._lock.release()
