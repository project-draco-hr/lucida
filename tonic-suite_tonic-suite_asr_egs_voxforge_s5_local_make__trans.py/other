'\nTakes a "PROMPTS" file with lines like:\n1snoke-20120412-hge/mfc/a0405 IT SEEMED THE ORDAINED ORDER OF THINGS THAT DOGS SHOULD WORK\n\n, an ID prefix and a list of audio file names (e.g. for above example the list will contain "a0405").\nIt checks if the prompts file have transcription for all audio files in the list and\nif this is the case produces a transcript line for each file in the format:\nprefix_a0405 IT SEEMED THE ORDAINED ORDER OF THINGS THAT DOGS SHOULD WORK\n'
import sys
if (len(sys.argv) != 4):
    err(('Usage: %s <prompts-file> <id-prefix> <utt-ids>' % sys.argv[0]))
    sys.exit(1)
id_prefix = sys.argv[2]
utt_ids = sys.argv[3].strip().split()
utt2trans = dict()
unnorm_utt = set()
for l in file(sys.argv[1]):
    (u, trans) = l.split(None, 1)
    u = u.strip().split('/')[(-1)]
    trans = trans.strip().replace('-', ' ')
    if ((not trans.isupper()) or (not trans.strip().replace(' ', '').replace("'", '').isalpha())):
        err(("The transcript for '%s'(user '%s') is not properly normalized - skipped!" % (u, id_prefix)))
        err(trans)
        unnorm_utt.add(u)
        continue
    utt2trans[u] = trans
for uid in utt_ids:
    if (uid in unnorm_utt):
        continue
    if (not (uid in utt2trans)):
        err(('No transcript found for %s_%s' % (id_prefix, uid)))
        continue
    print ('%s-%s %s' % (id_prefix, uid, utt2trans[uid]))
