{
  Pool<float[][]> pool=new Pool<float[][]>(path);
  int numMatrices=getNumHMMs();
  int i=0;
  if (hmmsHTK.transitions != null)   for (; i < hmmsHTK.transitions.size(); i++) {
    float[][] tr=hmmsHTK.transitions.get(i);
    float[][] tmat=new float[tr.length][tr[0].length];
    for (int j=0; j < tmat.length; j++)     for (int k=0; k < tmat[j].length; k++) {
      tmat[j][k]=logMath.linearToLog(tr[j][k]);
    }
    pool.put(i,tmat);
  }
  for (int l=0; l < numMatrices; l++) {
    SingleHMM hmm=hmmsHTK.getHMM(l);
    if (hmm.trans != null) {
      float[][] tr=hmm.trans;
      float[][] tmat=new float[tr.length][tr[0].length];
      for (int j=0; j < tmat.length; j++)       for (int k=0; k < tmat[j].length; k++) {
        tmat[j][k]=logMath.linearToLog(tr[j][k]);
      }
      hmm.trIdx=i;
      pool.put(i++,tmat);
    }
 else {
      hmm.trIdx=hmm.getTransIdx();
    }
  }
  return pool;
}
