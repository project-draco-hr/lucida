{
  if (allocated) {
    throw new RuntimeException("Can't change properties after allocation");
  }
  languageModels=ps.getComponentList(PROP_LANGUAGE_MODELS,LanguageModel.class);
  numberOfLanguageModels=languageModels.size();
  List<String> items=ps.getStringList(PROP_LANGUAGE_MODEL_WEIGHTS);
  if (items.size() != numberOfLanguageModels) {
    throw new RuntimeException("Number of weights not equal to number of language models");
  }
  float[] floats=new float[items.size()];
  weights=new float[floats.length];
  float weightSum=0;
  for (int i=0; i < items.size(); i++) {
    try {
      floats[i]=Float.parseFloat(items.get(i));
      weightSum+=floats[i];
      weights[i]=logMath.linearToLog(floats[i]);
    }
 catch (    NumberFormatException e) {
      throw new PropertyException(InterpolatedLanguageModel.class.getName(),PROP_LANGUAGE_MODEL_WEIGHTS,"Float value expected from the property list. But found:" + items.get(i));
    }
  }
  if (weightSum < 1.0 - EPSILON || weightSum > 1.0 + EPSILON) {
    throw new PropertyException(InterpolatedLanguageModel.class.getName(),PROP_LANGUAGE_MODEL_WEIGHTS,"Weights do not sum to 1.0");
  }
}
