{
  recvBuf=null;
  stats.clear();
  if (servers == null || servers.size() == 0 || requestBuf == null || fetchTimeoutSeconds <= 0) {
    return recvBuf;
  }
  ExecutorService executor=Executors.newSingleThreadExecutor();
  MultiFetch multiFetch=new MultiFetch();
  FutureTask<?> task=new FutureTask(multiFetch,null);
  executor.execute(task);
  try {
    task.get(fetchTimeoutSeconds,TimeUnit.SECONDS);
  }
 catch (  InterruptedException ie) {
    task.cancel(true);
    LOGGER.error("interrupted during fetch: " + ie.toString());
  }
catch (  ExecutionException ee) {
    task.cancel(true);
    LOGGER.error("exception during fetch: " + ee.toString());
  }
catch (  TimeoutException te) {
    task.cancel(true);
    LOGGER.error("timeout for fetch: " + te.toString());
  }
  executor.shutdownNow();
  multiFetch.close();
  return recvBuf;
}
