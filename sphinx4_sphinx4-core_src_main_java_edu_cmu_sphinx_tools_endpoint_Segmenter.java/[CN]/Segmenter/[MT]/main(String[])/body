{
  String configFile=null;
  String inputFile=null;
  String inputCtl=null;
  String outputFile=null;
  boolean noSplit=false;
  for (int i=0; i < argv.length; i++) {
    if (argv[i].equals("-c")) {
      configFile=argv[++i];
    }
    if (argv[i].equals("-i")) {
      inputFile=argv[++i];
    }
    if (argv[i].equals("-ctl")) {
      inputCtl=argv[++i];
    }
    if (argv[i].equals("-o")) {
      outputFile=argv[++i];
    }
    if (argv[i].equals("-no-split")) {
      noSplit=Boolean.parseBoolean(argv[i]);
    }
  }
  if ((inputFile == null && inputCtl == null) || outputFile == null) {
    System.out.println("Usage: java  -cp lib/batch.jar:lib/sphinx4.jar edu.cmu.sphinx.tools.endpoint.Segmenter " + "[ -config configFile ] -name frontendName " + "< -i input File -o outputFile | -ctl inputCtl -i inputFolder -o outputFolder >");
    System.exit(1);
  }
  URL configURL;
  if (configFile == null)   configURL=Segmenter.class.getResource("frontend.config.xml");
 else   configURL=new File(configFile).toURI().toURL();
  ConfigurationManager cm=new ConfigurationManager(configURL);
  if (noSplit) {
    ConfigurationManagerUtils.setProperty(cm,"wavWriter","captureUtterances","false");
  }
  if (inputCtl != null) {
    ConfigurationManagerUtils.setProperty(cm,"wavWriter","isCompletePath","true");
  }
  if (inputCtl == null)   processFile(inputFile,outputFile,cm);
 else   processCtl(inputCtl,inputFile,outputFile,cm);
}
