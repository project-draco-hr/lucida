{
  if (parseTree == null) {
    log.error("Syntactic parse of the question is null.");
    return;
  }
  Tree tree=TreeHelper.buildTree(parseTree,Tree.ENGLISH);
  TreeHelper.markHeadNode(tree);
  String mainVerb=tree.getHeadWord();
  try {
    IndexWord word=Dictionary.getInstance().lookupIndexWord(POS.VERB,mainVerb);
    String lemma=null;
    if (word != null)     lemma=word.getLemma();
    if (lemma != null)     mainVerb=lemma;
  }
 catch (  Exception e) {
    log.warn("Failed to get lemma for verb '" + mainVerb + "'",e);
  }
  if (mainVerb == null)   mainVerb="-";
  instance.addBinary(new Feature("MAIN_VERB" + "." + mainVerb));
  if (focusTerm != null && focusTerm.getText() != null) {
    String focus=focusTerm.getText();
    String question="";
    for (    Term term : terms)     question+=term.getText() + " ";
    question=question.trim();
    for (    String ptrn : whPtrns) {
      Matcher m=Pattern.compile(ptrn + SPACE_PTRN + focus+ REST_PTRN).matcher(question);
      if (m.matches()) {
        instance.addBinary(new Feature("WH_DET" + ".+"));
        break;
      }
    }
  }
  Tree focusNode=TreeHelper.findFirstPreterminalWithPrecedingPreterminal(tree,"RB|JJ","WRB");
  if (focusNode != null)   instance.addBinary(new Feature("FOCUS_ADJ" + "." + focusNode.getHeadWord()));
}
