{
  this.dir=dir;
  MsgPrinter.printInitializing();
  MsgPrinter.printStatusMsg("Creating tokenizer...");
  if (!OpenNLP.createTokenizer(dir + "res/nlp/tokenizer/opennlp/EnglishTok.bin.gz"))   MsgPrinter.printErrorMsg("Could not create tokenizer.");
  MsgPrinter.printStatusMsg("Creating sentence detector...");
  if (!OpenNLP.createSentenceDetector(dir + "res/nlp/sentencedetector/opennlp/EnglishSD.bin.gz"))   MsgPrinter.printErrorMsg("Could not create sentence detector.");
  LingPipe.createSentenceDetector();
  MsgPrinter.printStatusMsg("Creating stemmer...");
  SnowballStemmer.create();
  MsgPrinter.printStatusMsg("Creating POS tagger...");
  if (!OpenNLP.createPosTagger(dir + "res/nlp/postagger/opennlp/tag.bin.gz",dir + "res/nlp/postagger/opennlp/tagdict"))   MsgPrinter.printErrorMsg("Could not create OpenNLP POS tagger.");
  MsgPrinter.printStatusMsg("Creating chunker...");
  if (!OpenNLP.createChunker(dir + "res/nlp/phrasechunker/opennlp/EnglishChunk.bin.gz"))   MsgPrinter.printErrorMsg("Could not create chunker.");
  MsgPrinter.printStatusMsg("Creating syntactic parser...");
  try {
    StanfordParser.initialize();
  }
 catch (  Exception e) {
    MsgPrinter.printErrorMsg("Could not create Stanford parser.");
  }
  MsgPrinter.printStatusMsg("Creating NE taggers...");
  NETagger.loadListTaggers(dir + "res/nlp/netagger/lists/");
  NETagger.loadRegExTaggers(dir + "res/nlp/netagger/patterns.lst");
  MsgPrinter.printStatusMsg("  ...loading models");
  if (!StanfordNeTagger.isInitialized() && !StanfordNeTagger.init())   MsgPrinter.printErrorMsg("Could not create Stanford NE tagger.");
  MsgPrinter.printStatusMsg("  ...done");
  MsgPrinter.printStatusMsg("Creating WordNet dictionary...");
  if (!WordNet.initialize(dir + "res/ontologies/wordnet/file_properties.xml"))   MsgPrinter.printErrorMsg("Could not create WordNet dictionary.");
  MsgPrinter.printStatusMsg("Loading function verbs...");
  if (!FunctionWords.loadIndex(dir + "res/indices/functionwords_nonumbers"))   MsgPrinter.printErrorMsg("Could not load function words.");
  MsgPrinter.printStatusMsg("Loading prepositions...");
  if (!Prepositions.loadIndex(dir + "res/indices/prepositions"))   MsgPrinter.printErrorMsg("Could not load prepositions.");
  MsgPrinter.printStatusMsg("Loading irregular verbs...");
  if (!IrregularVerbs.loadVerbs(dir + "res/indices/irregularverbs"))   MsgPrinter.printErrorMsg("Could not load irregular verbs.");
  MsgPrinter.printStatusMsg("Loading word frequencies...");
  if (!WordFrequencies.loadIndex(dir + "res/indices/wordfrequencies"))   MsgPrinter.printErrorMsg("Could not load word frequencies.");
  MsgPrinter.printStatusMsg("Loading query reformulators...");
  if (!QuestionReformulationG.loadReformulators(dir + "res/reformulations/"))   MsgPrinter.printErrorMsg("Could not load query reformulators.");
  MsgPrinter.printStatusMsg("Loading question patterns...");
  if (!QuestionInterpreter.loadPatterns(dir + "res/patternlearning/questionpatterns/"))   MsgPrinter.printErrorMsg("Could not load question patterns.");
  MsgPrinter.printStatusMsg("Loading answer patterns...");
  if (!AnswerPatternFilter.loadPatterns(dir + "res/patternlearning/answerpatterns/"))   MsgPrinter.printErrorMsg("Could not load answer patterns.");
}
