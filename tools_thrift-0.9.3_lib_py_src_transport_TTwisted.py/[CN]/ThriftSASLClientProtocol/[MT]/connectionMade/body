@defer.inlineCallbacks
def connectionMade(self):
    self._sendSASLMessage(self.START, self.sasl.mechanism)
    initial_message = yield deferToThread(self.sasl.process)
    self._sendSASLMessage(self.OK, initial_message)
    while True:
        (status, challenge) = yield self._receiveSASLMessage()
        if (status == self.OK):
            response = yield deferToThread(self.sasl.process, challenge)
            self._sendSASLMessage(self.OK, response)
        elif (status == self.COMPLETE):
            if (not self.sasl.complete):
                msg = 'The server erroneously indicated that SASL negotiation was complete'
                raise TTransport.TTransportException(msg, message=msg)
            else:
                break
        else:
            msg = ('Bad SASL negotiation status: %d (%s)' % (status, challenge))
            raise TTransport.TTransportException(msg, message=msg)
    self._sasl_negotiation_deferred = None
    ThriftClientProtocol.connectionMade(self)
