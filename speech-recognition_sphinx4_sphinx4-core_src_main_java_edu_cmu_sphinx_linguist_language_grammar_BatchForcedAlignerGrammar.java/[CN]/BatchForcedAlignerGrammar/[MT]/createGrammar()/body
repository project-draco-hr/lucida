{
  initialNode=null;
  finalNode=createGrammarNode(true);
  try {
    LineNumberReader in=new LineNumberReader(new FileReader(refFile));
    String line;
    while (true) {
      line=in.readLine();
      if (line == null || line.isEmpty())       break;
      int uttNameStart=line.indexOf('(') + 1;
      int uttNameEnd=line.indexOf(')');
      if (uttNameStart < 0 || uttNameStart > uttNameEnd)       continue;
      String uttName=line.substring(uttNameStart,uttNameEnd);
      String transcript=line.substring(0,uttNameStart - 1).trim();
      if (transcript.isEmpty())       continue;
      initialNode=createGrammarNode(Dictionary.SILENCE_SPELLING);
      createForcedAlignerGrammar(initialNode,finalNode,transcript);
      grammars.put(uttName,initialNode);
      currentUttName=uttName;
    }
    in.close();
  }
 catch (  FileNotFoundException e) {
    throw new Error(e);
  }
catch (  IOException e) {
    throw new Error(e);
  }
catch (  NoSuchMethodException e) {
    throw new Error(e);
  }
  return initialNode;
}
