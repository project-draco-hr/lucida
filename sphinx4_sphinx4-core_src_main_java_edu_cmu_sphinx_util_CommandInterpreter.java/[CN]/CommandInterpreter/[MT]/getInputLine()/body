{
  String message=in.readLine();
  if (message == null)   return null;
  boolean justPush=false;
  boolean echo=false;
  boolean error=false;
  Matcher m=historyPush.matcher(message);
  if (m.matches()) {
    justPush=true;
    echo=true;
    message=m.group(1);
  }
  if (message.startsWith("^")) {
    m=editPattern.matcher(message);
    if (m.matches()) {
      String orig=m.group(1);
      String sub=m.group(2);
      try {
        Pattern pat=Pattern.compile(orig);
        Matcher subMatcher=pat.matcher(history.getLast(0));
        if (subMatcher.find()) {
          message=subMatcher.replaceFirst(sub);
          echo=true;
        }
 else {
          error=true;
          putResponse(message + ": substitution failed");
        }
      }
 catch (      PatternSyntaxException pse) {
        error=true;
        putResponse("Bad regexp: " + pse.getDescription());
      }
    }
 else {
      error=true;
      putResponse("bad substitution sytax, use ^old^new^");
    }
  }
 else   if ((m=bbPattern.matcher(message)).find()) {
    message=m.replaceAll(history.getLast(0));
    echo=true;
  }
 else   if (message.startsWith("!")) {
    if (message.matches("!\\d+")) {
      int which=Integer.parseInt(message.substring(1));
      message=history.get(which);
    }
 else     if (message.matches("!-\\d+")) {
      int which=Integer.parseInt(message.substring(2));
      message=history.getLast(which - 1);
    }
 else {
      message=history.findLast(message.substring(1));
    }
    echo=true;
  }
  if (error) {
    return "";
  }
  if (!message.isEmpty()) {
    history.add(message);
  }
  if (echo) {
    putResponse(message);
  }
  return justPush ? "" : message;
}
