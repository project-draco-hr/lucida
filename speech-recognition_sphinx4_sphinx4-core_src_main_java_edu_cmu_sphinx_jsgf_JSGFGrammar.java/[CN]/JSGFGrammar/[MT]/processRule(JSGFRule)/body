{
  GrammarGraph result;
  if (rule != null) {
    logger.fine("parseRule: " + rule);
  }
  if (rule instanceof JSGFRuleAlternatives) {
    result=processRuleAlternatives((JSGFRuleAlternatives)rule);
  }
 else   if (rule instanceof JSGFRuleCount) {
    result=processRuleCount((JSGFRuleCount)rule);
  }
 else   if (rule instanceof JSGFRuleName) {
    result=processRuleName((JSGFRuleName)rule);
  }
 else   if (rule instanceof JSGFRuleSequence) {
    result=processRuleSequence((JSGFRuleSequence)rule);
  }
 else   if (rule instanceof JSGFRuleTag) {
    result=processRuleTag((JSGFRuleTag)rule);
  }
 else   if (rule instanceof JSGFRuleToken) {
    result=processRuleToken((JSGFRuleToken)rule);
  }
 else {
    throw new IllegalArgumentException("Unsupported Rule type: " + rule);
  }
  return result;
}
