{
  if (r instanceof JSGFRuleToken) {
    return;
  }
  if (r instanceof JSGFRuleAlternatives) {
    for (    JSGFRule rule : ((JSGFRuleAlternatives)r).getRules()) {
      resolveRule(rule);
    }
    return;
  }
  if (r instanceof JSGFRuleSequence) {
    for (    JSGFRule rule : ((JSGFRuleSequence)r).getRules()) {
      resolveRule(rule);
    }
    return;
  }
  if (r instanceof JSGFRuleCount) {
    resolveRule(((JSGFRuleCount)r).getRule());
    return;
  }
  if (r instanceof JSGFRuleTag) {
    JSGFRuleTag rt=(JSGFRuleTag)r;
    JSGFRule rule=rt.getRule();
    String ruleStr=rule.toString();
    Collection<String> tags=ruleTags.get(ruleStr);
    if (tags == null) {
      tags=new HashSet<String>();
      ruleTags.put(ruleStr,tags);
    }
    tags.add(rt.getTag());
    resolveRule(rule);
    return;
  }
  if (r instanceof JSGFRuleName) {
    JSGFRuleName rn=(JSGFRuleName)r;
    JSGFRuleName resolved=resolve(rn);
    if (resolved == null) {
      throw new JSGFGrammarException("Unresolvable rulename in grammar " + name + ": "+ rn);
    }
 else {
      rn.resolvedRuleName=resolved.getRuleName();
      rn.setRuleName(resolved.getRuleName());
      return;
    }
  }
  throw new JSGFGrammarException("Unknown rule type");
}
