def graph(self, profile, theme):
    self.begin_graph()
    fontname = theme.graph_fontname()
    fontcolor = theme.graph_fontcolor()
    nodestyle = theme.node_style()
    self.attr('graph', fontname=fontname, ranksep=0.25, nodesep=0.125)
    self.attr('node', fontname=fontname, shape='box', style=nodestyle, fontcolor=fontcolor, width=0, height=0)
    self.attr('edge', fontname=fontname)
    for (_, function) in sorted_iteritems(profile.functions):
        labels = []
        if (function.process is not None):
            labels.append(function.process)
        if (function.module is not None):
            labels.append(function.module)
        if self.strip:
            function_name = function.stripped_name()
        else:
            function_name = function.name
        if self.wrap:
            function_name = self.wrap_function_name(function_name)
        labels.append(function_name)
        for event in self.show_function_events:
            if (event in function.events):
                label = event.format(function[event])
                labels.append(label)
        if (function.called is not None):
            labels.append(('%u%s' % (function.called, MULTIPLICATION_SIGN)))
        if (function.weight is not None):
            weight = function.weight
        else:
            weight = 0.0
        label = '\n'.join(labels)
        self.node(function.id, label=label, color=self.color(theme.node_bgcolor(weight)), fontcolor=self.color(theme.node_fgcolor(weight)), fontsize=('%.2f' % theme.node_fontsize(weight)))
        for (_, call) in sorted_iteritems(function.calls):
            callee = profile.functions[call.callee_id]
            labels = []
            for event in self.show_edge_events:
                if (event in call.events):
                    label = event.format(call[event])
                    labels.append(label)
            if (call.weight is not None):
                weight = call.weight
            elif (callee.weight is not None):
                weight = callee.weight
            else:
                weight = 0.0
            label = '\n'.join(labels)
            self.edge(function.id, call.callee_id, label=label, color=self.color(theme.edge_color(weight)), fontcolor=self.color(theme.edge_color(weight)), fontsize=('%.2f' % theme.edge_fontsize(weight)), penwidth=('%.2f' % theme.edge_penwidth(weight)), labeldistance=('%.2f' % theme.edge_penwidth(weight)), arrowsize=('%.2f' % theme.edge_arrowsize(weight)))
    self.end_graph()
