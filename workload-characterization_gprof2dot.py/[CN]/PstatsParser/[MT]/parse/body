def parse(self):
    self.profile[TIME] = 0.0
    self.profile[TOTAL_TIME] = self.stats.total_tt
    for (fn, (cc, nc, tt, ct, callers)) in compat_iteritems(self.stats.stats):
        callee = self.get_function(fn)
        callee.called = nc
        callee[TOTAL_TIME] = ct
        callee[TIME] = tt
        self.profile[TIME] += tt
        self.profile[TOTAL_TIME] = max(self.profile[TOTAL_TIME], ct)
        for (fn, value) in compat_iteritems(callers):
            caller = self.get_function(fn)
            call = Call(callee.id)
            if isinstance(value, tuple):
                for i in xrange(0, len(value), 4):
                    (nc, cc, tt, ct) = value[i:(i + 4)]
                    if (CALLS in call):
                        call[CALLS] += cc
                    else:
                        call[CALLS] = cc
                    if (TOTAL_TIME in call):
                        call[TOTAL_TIME] += ct
                    else:
                        call[TOTAL_TIME] = ct
            else:
                call[CALLS] = value
                call[TOTAL_TIME] = (ratio(value, nc) * ct)
            caller.add_call(call)
    if False:
        self.stats.print_stats()
        self.stats.print_callees()
    self.profile.validate()
    self.profile.ratio(TIME_RATIO, TIME)
    self.profile.ratio(TOTAL_TIME_RATIO, TOTAL_TIME)
    return self.profile
