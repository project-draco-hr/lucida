def parse(self):
    self.readline()
    profile = self.profile
    profile[SAMPLES] = 0
    while (not self.eof()):
        self.parse_event()
    profile.validate()
    profile.find_cycles()
    profile.ratio(TIME_RATIO, SAMPLES)
    profile.call_ratios(SAMPLES2)
    if (totalMethod == 'callratios'):
        profile.integrate(TOTAL_TIME_RATIO, TIME_RATIO)
    elif (totalMethod == 'callstacks'):
        profile[TOTAL_SAMPLES] = profile[SAMPLES]
        profile.ratio(TOTAL_TIME_RATIO, TOTAL_SAMPLES)
        for function in compat_itervalues(profile.functions):
            for call in compat_itervalues(function.calls):
                if (call.ratio is not None):
                    callee = profile.functions[call.callee_id]
                    call[TOTAL_TIME_RATIO] = (call.ratio * callee[TOTAL_TIME_RATIO])
    else:
        assert False
    return profile
