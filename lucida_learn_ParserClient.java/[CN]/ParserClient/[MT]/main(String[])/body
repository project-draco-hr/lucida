{
  int port=-1;
  if (args.length >= 1) {
    try {
      port=Integer.parseInt(args[0]);
    }
 catch (    NumberFormatException e) {
      printHelpMsg();
      e.printStackTrace();
      return;
    }
    System.out.println("Port = " + port);
  }
 else {
    System.out.println("Error: Please specify a port number.");
    printHelpMsg();
    return;
  }
  String Indri_path="";
  if (args.length >= 2) {
    Indri_path=args[1];
    System.out.println("Your Indri repository will be stored at: " + Indri_path);
  }
 else {
    System.out.println("Error: Please specify the path to the Indri repository.");
    printHelpMsg();
    return;
  }
  int num_urls, num_files=-1;
  if (args.length >= 4) {
    try {
      num_urls=Integer.parseInt(args[2]);
      num_files=Integer.parseInt(args[3]);
    }
 catch (    NumberFormatException e) {
      printHelpMsg();
      e.printStackTrace();
      return;
    }
    if (num_urls < 0 || num_files < 0) {
      System.out.println("Error: Please specify a valid number of urls and files.");
      return;
    }
    System.out.println("Number of urls = " + num_urls);
    System.out.println("Number of files = " + num_files);
  }
 else {
    System.out.println("Error: Please specify both the number of urls and the number of files.");
    printHelpMsg();
    return;
  }
  List<String> urls=new ArrayList<String>();
  List<String> files=new ArrayList<String>();
  if (args.length == MIN_ARGS_COUNT + num_urls + num_files) {
    for (int i=MIN_ARGS_COUNT; i < MIN_ARGS_COUNT + num_urls; ++i) {
      urls.add(args[i]);
    }
    for (int i=MIN_ARGS_COUNT + num_urls; i < MIN_ARGS_COUNT + num_urls + num_files; ++i) {
      files.add(args[i]);
    }
  }
 else {
    System.out.println("Error: The number of urls and files does not match the input.");
    return;
  }
  TTransport transport=new TSocket("localhost",port);
  TProtocol protocol=new TBinaryProtocol(new TFramedTransport(transport));
  ParserService.Client client=new ParserService.Client(protocol);
  try {
    transport.open();
    System.out.println("Connecting to the parser...");
    boolean is_successful=client.parseThrift(Indri_path,urls,files);
    if (is_successful) {
      System.out.println("Your Indri repository has been stored at: " + Indri_path);
    }
 else {
      System.out.println("Failed. You may check the error message at the server terminal.");
    }
    transport.close();
  }
 catch (  TException x) {
    x.printStackTrace();
  }
  return;
}
