def __init__(self, node_list, starting_indices=[0]):
    self.node_list = node_list
    self.starting_indices = starting_indices
    global_has_seen = set()
    for start_index in starting_indices:
        start_node = self.get_node(start_index)
        fringe = Queue()
        has_seen = set()
        fringe.put(start_node)
        has_seen.add(start_node)
        while (not fringe.empty()):
            curr_node = fringe.get()
            for to_index in curr_node.to_indices:
                to_node = self.get_node(to_index)
                if (to_node in has_seen):
                    print 'Invalid graph: cyclic?'
                    exit()
                else:
                    fringe.put(to_node)
                    has_seen.add(to_node)
        global_has_seen = has_seen.union(global_has_seen)
    if (len(global_has_seen) < len(node_list)):
        print 'Invalid graph: unconnected'
    self.service_names = set()
    for node in node_list:
        self.service_names.add(node.service_name)
