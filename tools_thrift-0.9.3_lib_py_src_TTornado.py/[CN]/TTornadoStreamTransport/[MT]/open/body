@gen.coroutine
def open(self, timeout=None):
    logger.debug('socket connecting')
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM, 0)
    self.stream = iostream.IOStream(sock)
    try:
        connect = self.stream.connect((self.host, self.port))
        if (timeout is not None):
            yield self.with_timeout(timeout, connect)
        else:
            yield connect
    except (socket.error, IOError, ioloop.TimeoutError) as e:
        message = 'could not connect to {}:{} ({})'.format(self.host, self.port, e)
        raise TTransportException(type=TTransportException.NOT_OPEN, message=message)
    raise gen.Return(self)
