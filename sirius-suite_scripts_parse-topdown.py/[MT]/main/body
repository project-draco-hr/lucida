def main(args):
    if (len(args) < 2):
        print 'Usage: ./collect-stats.py <top-directory of kernels>'
        return
    kernels = ['fe', 'fd', 'gmm', 'dnn-asr', 'stemmer', 'crf', 'regex']
    platforms = ['smt']
    header = ['Platform', 'Kernel']
    metrics = (header + ['CPI Rate', 'Front-end Bound', 'Bad Speculation', 'Retiring', 'Back-End Bound', 'Memory Bound', 'Core Bound', 'Back-end Sum', 'Full Sum'])
    kdir = args[1]
    os.chdir(kdir)
    root = os.getcwd()
    for m in metrics[:(-1)]:
        sys.stdout.write(('%s,' % m))
    else:
        print ('%s' % metrics[(-1)])
    data = {}
    for k in kernels:
        d = ((os.getcwd() + '/') + k)
        os.chdir(d)
        kroot = os.getcwd()
        for plat in platforms:
            if ((plat == 'smt') or (plat == 'cores')):
                os.chdir('pthread')
            else:
                os.chdir(plat)
            fname = ('sirius-suite-%s.report' % plat)
            if os.path.isfile(fname):
                data = get_data(fname, metrics)
                data['Kernel'] = k
                data['Platform'] = plat
                data['Back-end Sum'] = (float(data['Core Bound']) + float(data['Memory Bound']))
                data['Full Sum'] = (((float(data['Front-end Bound']) + float(data['Bad Speculation'])) + float(data['Retiring'])) + float(data['Back-End Bound']))
                sirius_print(data, metrics)
            os.chdir(kroot)
        os.chdir(root)
