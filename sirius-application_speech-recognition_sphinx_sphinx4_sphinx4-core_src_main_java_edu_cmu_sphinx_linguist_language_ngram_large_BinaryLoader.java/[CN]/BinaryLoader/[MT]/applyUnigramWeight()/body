{
  float logUnigramWeight=logMath.linearToLog(unigramWeight);
  float logNotUnigramWeight=logMath.linearToLog(1.0f - unigramWeight);
  float logUniform=logMath.linearToLog(1.0f / (numberNGrams[0]));
  float logWip=logMath.linearToLog(wip);
  float p2=logUniform + logNotUnigramWeight;
  for (int i=0; i < numberNGrams[0]; i++) {
    UnigramProbability unigram=unigrams[i];
    float p1=unigram.getLogProbability();
    if (i != startWordID) {
      p1+=logUnigramWeight;
      p1=logMath.addAsLinear(p1,p2);
    }
    if (applyLanguageWeightAndWip) {
      p1=p1 * languageWeight + logWip;
      unigram.setLogBackoff(unigram.getLogBackoff() * languageWeight);
    }
    unigram.setLogProbability(p1);
  }
}
