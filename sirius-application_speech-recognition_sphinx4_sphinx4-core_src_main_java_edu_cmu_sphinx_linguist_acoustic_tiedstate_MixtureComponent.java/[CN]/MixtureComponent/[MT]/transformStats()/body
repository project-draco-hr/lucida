{
  int featDim=mean.length;
  if (meanTransformationMatrix != null) {
    meanTransformed=new float[featDim];
    for (int i=0; i < featDim; i++)     for (int j=0; j < featDim; j++)     meanTransformed[i]+=mean[j] * meanTransformationMatrix[i][j];
  }
 else {
    meanTransformed=mean;
  }
  if (meanTransformationVector != null)   for (int k=0; k < featDim; k++)   meanTransformed[k]+=meanTransformationVector[k];
  if (varianceTransformationMatrix != null) {
    precisionTransformed=new float[variance.length];
    for (int i=0; i < featDim; i++)     for (int j=0; j < featDim; j++)     precisionTransformed[i]+=variance[j] * varianceTransformationMatrix[i][j];
  }
 else   precisionTransformed=variance.clone();
  if (varianceTransformationVector != null)   for (int k=0; k < featDim; k++)   precisionTransformed[k]+=varianceTransformationVector[k];
  for (int k=0; k < featDim; k++) {
    float flooredPrecision=(precisionTransformed[k] < varianceFloor ? varianceFloor : precisionTransformed[k]);
    precisionTransformed[k]=1.0f / (-2.0f * flooredPrecision);
  }
}
