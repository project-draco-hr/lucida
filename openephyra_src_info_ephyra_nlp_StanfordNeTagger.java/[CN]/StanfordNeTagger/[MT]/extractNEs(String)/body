{
  if (!isInitialized() || sentence.length() <= 1 || sentence.matches("\\W*+"))   return new HashMap<String,String[]>();
  String neString="";
  try {
    neString=classifier.testString(sentence);
  }
 catch (  Exception e) {
    MsgPrinter.printErrorMsg("Stanford NE Recognizer failed to tag " + "the following sentence:");
    MsgPrinter.printErrorMsg(sentence);
    MsgPrinter.printErrorMsg("Error message:");
    MsgPrinter.printErrorMsg(e.toString());
  }
  String[] neTokens=neString.split("\\s");
  String mark="O";
  String ne="";
  HashMap<String,ArrayList<String>> nesByType=new HashMap<String,ArrayList<String>>();
  for (int i=0; i < neTokens.length; i++) {
    String[] s=neTokens[i].split("\\/");
    if (s.length == 1)     s=new String[]{s[0],"O"};
    if (mark.equals(s[1])) {
      ne+=" " + s[0];
    }
 else {
      if (!"O".equals(mark)) {
        ArrayList<String> nes=nesByType.get(mark);
        if (nes == null) {
          nes=new ArrayList<String>();
          nesByType.put(mark,nes);
        }
        nes.add(ne.trim());
      }
      ne=s[0];
      mark=s[1];
    }
  }
  if (!"O".equals(mark)) {
    ArrayList<String> nes=nesByType.get(mark);
    if (nes == null) {
      nes=new ArrayList<String>();
      nesByType.put(mark,nes);
    }
    nes.add(ne.trim());
  }
  HashMap<String,String[]> results=new HashMap<String,String[]>();
  ArrayList<String> neTypes=new ArrayList<String>(nesByType.keySet());
  for (int t=0; t < neTypes.size(); t++) {
    String type=neTypes.get(t);
    ArrayList<String> nes=nesByType.get(type);
    results.put("NE" + type.toLowerCase(),nes.toArray(new String[nes.size()]));
  }
  return results;
}
