{
  List<RangeMap> mapping=new LinkedList<RangeMap>();
  Matcher whitespace_matcher=whitespace_pattern.matcher(sentence);
  DeltaRangeMap delta_rmap=null;
  while (whitespace_matcher.find()) {
    int start=whitespace_matcher.start();
    int end=whitespace_matcher.end();
    int length=end - start;
    if (delta_rmap == null) {
      delta_rmap=new DeltaRangeMap(start,0,length);
    }
 else {
      delta_rmap.end=start - delta_rmap.delta;
      mapping.add(delta_rmap);
      delta_rmap=new DeltaRangeMap(delta_rmap.end,0,delta_rmap.delta + length);
    }
  }
  if (delta_rmap != null) {
    delta_rmap.end=sentence.length() - delta_rmap.delta;
    mapping.add(delta_rmap);
  }
  return mapping;
}
