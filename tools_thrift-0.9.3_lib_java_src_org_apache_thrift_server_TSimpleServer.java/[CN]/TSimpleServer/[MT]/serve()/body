{
  try {
    serverTransport_.listen();
  }
 catch (  TTransportException ttx) {
    LOGGER.error("Error occurred during listening.",ttx);
    return;
  }
  if (eventHandler_ != null) {
    eventHandler_.preServe();
  }
  setServing(true);
  while (!stopped_) {
    TTransport client=null;
    TProcessor processor=null;
    TTransport inputTransport=null;
    TTransport outputTransport=null;
    TProtocol inputProtocol=null;
    TProtocol outputProtocol=null;
    ServerContext connectionContext=null;
    try {
      client=serverTransport_.accept();
      if (client != null) {
        processor=processorFactory_.getProcessor(client);
        inputTransport=inputTransportFactory_.getTransport(client);
        outputTransport=outputTransportFactory_.getTransport(client);
        inputProtocol=inputProtocolFactory_.getProtocol(inputTransport);
        outputProtocol=outputProtocolFactory_.getProtocol(outputTransport);
        if (eventHandler_ != null) {
          connectionContext=eventHandler_.createContext(inputProtocol,outputProtocol);
        }
        while (true) {
          if (eventHandler_ != null) {
            eventHandler_.processContext(connectionContext,inputTransport,outputTransport);
          }
          if (!processor.process(inputProtocol,outputProtocol)) {
            break;
          }
        }
      }
    }
 catch (    TTransportException ttx) {
    }
catch (    TException tx) {
      if (!stopped_) {
        LOGGER.error("Thrift error occurred during processing of message.",tx);
      }
    }
catch (    Exception x) {
      if (!stopped_) {
        LOGGER.error("Error occurred during processing of message.",x);
      }
    }
    if (eventHandler_ != null) {
      eventHandler_.deleteContext(connectionContext,inputProtocol,outputProtocol);
    }
    if (inputTransport != null) {
      inputTransport.close();
    }
    if (outputTransport != null) {
      outputTransport.close();
    }
  }
  setServing(false);
}
