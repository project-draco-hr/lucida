{
  double[] melspectrum=input.getValues();
  if (melcosine == null) {
    numberMelFilters=melspectrum.length;
    computeMelCosine();
  }
 else   if (melspectrum.length != numberMelFilters) {
    throw new IllegalArgumentException("MelSpectrum size is incorrect: melspectrum.length == " + melspectrum.length + ", numberMelFilters == "+ numberMelFilters);
  }
  for (int i=0; i < melspectrum.length; ++i) {
    melspectrum[i]=Math.log(melspectrum[i] + LOG_FLOOR);
  }
  double[] cepstrum;
  cepstrum=applyMelCosine(melspectrum);
  return new DoubleData(cepstrum,input.getSampleRate(),input.getFirstSampleNumber());
}
