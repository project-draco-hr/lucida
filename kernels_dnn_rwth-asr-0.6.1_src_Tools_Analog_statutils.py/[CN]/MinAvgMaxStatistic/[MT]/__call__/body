def __call__(self, dataCollection):
    if (len(self.fields) != len(self.fieldProcessor)):
        raise 'in MinAvgMaxStatistic: number of fields and field processor does not match'
    if self.statisticContainerName:
        dataCollection = dataCollection.get(self.statisticContainerName, {})
    data = []
    for entry in dataCollection:
        dataPoint = entry.get(self.statisticName, None)
        if dataPoint:
            data.append(dataPoint)
    data = pivot(data)
    values = []
    for fp in self.fieldProcessor:
        sample = data.get(fp[0], None)
        if sample:
            values.append(fp[1](sample))
        else:
            values.append(float('NaN'))
    return zip(self.fields, values)
