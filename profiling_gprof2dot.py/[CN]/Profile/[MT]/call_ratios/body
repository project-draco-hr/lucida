def call_ratios(self, event):
    cycle_totals = {}
    for cycle in self.cycles:
        cycle_totals[cycle] = 0.0
    function_totals = {}
    for function in compat_itervalues(self.functions):
        function_totals[function] = 0.0
    for function in compat_itervalues(self.functions):
        for call in compat_itervalues(function.calls):
            if (call.callee_id != function.id):
                callee = self.functions[call.callee_id]
                if (event in call.events):
                    function_totals[callee] += call[event]
                    if ((callee.cycle is not None) and (callee.cycle is not function.cycle)):
                        cycle_totals[callee.cycle] += call[event]
                else:
                    sys.stderr.write((((('call_ratios: No data for ' + function.name) + ' call to ') + callee.name) + '\n'))
    for function in compat_itervalues(self.functions):
        for call in compat_itervalues(function.calls):
            assert (call.ratio is None)
            if (call.callee_id != function.id):
                callee = self.functions[call.callee_id]
                if (event in call.events):
                    if ((callee.cycle is not None) and (callee.cycle is not function.cycle)):
                        total = cycle_totals[callee.cycle]
                    else:
                        total = function_totals[callee]
                    call.ratio = ratio(call[event], total)
                else:
                    call.ratio = 0.0
