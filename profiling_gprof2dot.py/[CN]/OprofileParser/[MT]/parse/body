def parse(self):
    self.readline()
    self.parse_header()
    while self.lookahead():
        self.parse_entry()
    profile = Profile()
    reverse_call_samples = {}
    profile[SAMPLES] = 0
    for (_callers, _function, _callees) in compat_itervalues(self.entries):
        function = Function(_function.id, _function.name)
        function[SAMPLES] = _function.samples
        profile.add_function(function)
        profile[SAMPLES] += _function.samples
        if _function.application:
            function.process = os.path.basename(_function.application)
        if _function.image:
            function.module = os.path.basename(_function.image)
        total_callee_samples = 0
        for _callee in compat_itervalues(_callees):
            total_callee_samples += _callee.samples
        for _callee in compat_itervalues(_callees):
            if (not _callee.self):
                call = Call(_callee.id)
                call[SAMPLES2] = _callee.samples
                function.add_call(call)
    profile.validate()
    profile.find_cycles()
    profile.ratio(TIME_RATIO, SAMPLES)
    profile.call_ratios(SAMPLES2)
    profile.integrate(TOTAL_TIME_RATIO, TIME_RATIO)
    return profile
