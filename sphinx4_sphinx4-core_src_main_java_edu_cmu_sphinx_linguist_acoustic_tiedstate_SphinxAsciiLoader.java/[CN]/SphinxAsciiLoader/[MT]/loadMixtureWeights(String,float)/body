{
  logger.fine("Loading mixture weights from: " + path);
  InputStream inputStream=getDataStream(path);
  if (inputStream == null) {
    throw new FileNotFoundException("Error trying to read file " + path);
  }
  Pool<float[]> pool=new Pool<float[]>(path);
  ExtendedStreamTokenizer est=new ExtendedStreamTokenizer(inputStream,'#',false);
  est.expectString("mixw");
  int numStates=est.getInt("numStates");
  int numStreams=est.getInt("numStreams");
  int numGaussiansPerState=est.getInt("numGaussiansPerState");
  pool.setFeature(NUM_SENONES,numStates);
  pool.setFeature(NUM_STREAMS,numStreams);
  pool.setFeature(NUM_GAUSSIANS_PER_STATE,numGaussiansPerState);
  for (int i=0; i < numStates; i++) {
    est.expectString("mixw");
    est.expectString("[" + i);
    est.expectString("0]");
    float[] logMixtureWeight=new float[numGaussiansPerState];
    for (int j=0; j < numGaussiansPerState; j++) {
      float val=est.getFloat("mixwVal");
      if (val < floor) {
        val=floor;
      }
      logMixtureWeight[j]=val;
    }
    LogMath.getInstance().linearToLog(logMixtureWeight);
    pool.put(i,logMixtureWeight);
  }
  est.close();
  return pool;
}
