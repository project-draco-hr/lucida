def doBenchmark():
    iters = 25000
    setup = '\nfrom __main__ import hm, rs, TDevNullTransport\nfrom thrift.protocol import TBinaryProtocol\ntrans = TDevNullTransport()\nprot = TBinaryProtocol.TBinaryProtocol%s(trans)\n'
    setup_fast = (setup % 'Accelerated')
    setup_slow = (setup % '')
    print 'Starting Benchmarks'
    print ('HolyMoley Standard = %f' % timeit.Timer('hm.write(prot)', setup_slow).timeit(number=iters))
    print ('HolyMoley Acceler. = %f' % timeit.Timer('hm.write(prot)', setup_fast).timeit(number=iters))
    print ('FastStruct Standard = %f' % timeit.Timer('rs.write(prot)', setup_slow).timeit(number=iters))
    print ('FastStruct Acceler. = %f' % timeit.Timer('rs.write(prot)', setup_fast).timeit(number=iters))
