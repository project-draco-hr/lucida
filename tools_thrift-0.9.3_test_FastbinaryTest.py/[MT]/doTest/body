def doTest():
    checkWrite(hm)
    no_set = deepcopy(hm)
    no_set.contain = set()
    checkRead(no_set)
    checkWrite(rs)
    checkRead(rs)
    checkWrite(rshuge)
    checkRead(rshuge)
    checkWrite(my_zero)
    checkRead(my_zero)
    checkRead(Backwards({'first_tag2': 4, 'second_tag1': 2, }))
    o = Backwards({'first_tag2': 4, 'second_tag1': 2, })
    trans_fast = TTransport.TMemoryBuffer()
    trans_slow = TTransport.TMemoryBuffer()
    prot_fast = TBinaryProtocol.TBinaryProtocolAccelerated(trans_fast)
    prot_slow = TBinaryProtocol.TBinaryProtocol(trans_slow)
    o.write(prot_fast)
    o.write(prot_slow)
    ORIG = trans_slow.getvalue()
    MINE = trans_fast.getvalue()
    if (ORIG == MINE):
        print "That shouldn't happen."
    prot = TBinaryProtocol.TBinaryProtocolAccelerated(TTransport.TMemoryBuffer())
    o.write(prot)
    prot = TBinaryProtocol.TBinaryProtocol(TTransport.TMemoryBuffer(prot.trans.getvalue()))
    c = o.__class__()
    c.read(prot)
    if (c != o):
        print 'copy: '
        pprint(eval(repr(c)))
        print 'orig: '
        pprint(eval(repr(o)))
