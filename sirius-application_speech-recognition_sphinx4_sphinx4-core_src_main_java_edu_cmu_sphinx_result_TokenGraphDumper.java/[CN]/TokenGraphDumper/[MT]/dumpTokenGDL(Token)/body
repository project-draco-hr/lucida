{
  if (dumpedTokens.contains(token)) {
    return "";
  }
 else {
    String label=("[" + token.getAcousticScore() + token.getInsertionScore()+ ','+ token.getLanguageScore()+ ']');
    if (token.isWord()) {
      label=token.getWord().getSpelling() + label;
    }
    String color=null;
    if (token.getSearchState() != null) {
      color=getColor(token.getSearchState());
    }
    StringBuilder gdl=new StringBuilder().append("node: { title: \"").append(getTokenID(token)).append("\" label: \"").append(label).append("\" color: ");
    if (color != null) {
      gdl.append(color).append(" }");
    }
 else {
      gdl.append(" }");
    }
    gdl.append('\n');
    dumpedTokens.add(token);
    if (token.getPredecessor() != null) {
      gdl.append("edge: { sourcename: \"").append(getTokenID(token)).append("\" targetname: \"").append(getTokenID(token.getPredecessor())).append("\" }").append('\n').append(dumpTokenGDL(token.getPredecessor()));
    }
    if (loserManager != null) {
      List<Token> list=loserManager.getAlternatePredecessors(token);
      if (list != null) {
        for (        Token loser : list) {
          gdl.append("edge: { sourcename: \"").append(getTokenID(token)).append("\" targetname: \"").append(getTokenID(loser)).append("\" }").append('\n').append(dumpTokenGDL(loser));
        }
      }
    }
    return gdl.toString();
  }
}
