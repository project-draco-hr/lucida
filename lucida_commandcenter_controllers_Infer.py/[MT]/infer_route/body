@infer.route('/infer', methods=['GET', 'POST'])
@login_required
def infer_route():
    options = {}
    if os.environ.get('ASR_ADDR_PORT'):
        options['asr_addr_port'] = os.environ.get('ASR_ADDR_PORT')
    else:
        options['asr_addr_port'] = 'ws://localhost:8081'
    try:
        form = request.form
        if (request.method == 'POST'):
            if (not ('op' in form)):
                raise RuntimeError('Did you click the Ask button?')
            elif (form['op'] == 'infer'):
                upload_file = request.files['file']
                if (upload_file.filename != ''):
                    check_image_extension(upload_file)
                print '@@@@@@@@@@', form['speech_input']
                services_needed = query_classifier.predict(form['speech_input'], upload_file)
                options['result'] = thrift_client.infer(session['username'], services_needed, form['speech_input'], upload_file.read())
                log(('Result ' + options['result']))
                if services_needed.has_service('CA'):
                    options['dates'] = options['result']
                    options['result'] = None
                    return render_template('infer.html', **options)
            else:
                raise RuntimeError('Did you click the Ask button?')
    except Exception as e:
        log(e)
        if (str(e) == 'TSocket read 0 bytes'):
            e = 'Back-end service encountered a problem'
        options['error'] = e
        return render_template('infer.html', **options)
    return render_template('infer.html', **options)
