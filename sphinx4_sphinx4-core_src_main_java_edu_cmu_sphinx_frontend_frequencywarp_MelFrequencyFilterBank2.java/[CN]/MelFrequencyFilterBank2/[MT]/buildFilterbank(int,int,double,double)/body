{
  checkArgument(windowLength > 0,"window length must be positive");
  checkArgument(numberFilters > 0,"number of filters must be positive");
  double minFreqMel=linearToMel(minFreq);
  double maxFreqMel=linearToMel(maxFreq);
  double deltaFreqMel=(maxFreqMel - minFreqMel) / (numberFilters + 1);
  double deltaFreq=(double)sampleRate / windowLength;
  double[] melPoints=new double[windowLength / 2];
  filters=new MelFilter2[numberFilters];
  for (int i=0; i < windowLength / 2; ++i)   melPoints[i]=linearToMel(i * deltaFreq);
  for (int i=0; i < numberFilters; i++) {
    double centerMel=minFreqMel + (i + 1) * deltaFreqMel;
    filters[i]=new MelFilter2(centerMel,deltaFreqMel,melPoints);
  }
}
