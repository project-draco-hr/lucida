{
  logger=Logger.getLogger(getClass().getName());
  this.acousticModel=acousticModel;
  this.logMath=LogMath.getInstance();
  this.unitManager=unitManager;
  this.languageModel=languageModel;
  this.dictionary=dictionary;
  this.fullWordHistories=fullWordHistories;
  this.wantUnigramSmear=wantUnigramSmear;
  this.logWordInsertionProbability=logMath.linearToLog(wordInsertionProbability);
  this.logSilenceInsertionProbability=logMath.linearToLog(silenceInsertionProbability);
  this.logFillerInsertionProbability=logMath.linearToLog(fillerInsertionProbability);
  this.logUnitInsertionProbability=logMath.linearToLog(unitInsertionProbability);
  this.languageWeight=languageWeight;
  this.addFillerWords=addFillerWords;
  this.generateUnitStates=generateUnitStates;
  this.unigramSmearWeight=unigramSmearWeight;
  this.maxArcCacheSize=maxArcCacheSize;
  cacheEnabled=maxArcCacheSize > 0;
  if (cacheEnabled) {
    arcCache=new LRUCache<LexTreeState,SearchStateArc[]>(maxArcCacheSize);
  }
}
