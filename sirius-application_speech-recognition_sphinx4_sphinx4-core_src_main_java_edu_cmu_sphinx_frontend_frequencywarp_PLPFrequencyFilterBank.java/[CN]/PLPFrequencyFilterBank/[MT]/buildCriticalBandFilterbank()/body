{
  double minBarkFreq;
  double maxBarkFreq;
  double deltaBarkFreq;
  double nyquistFreq;
  double centerFreq;
  int numberDFTPoints=(numberFftPoints >> 1) + 1;
  double[] DFTFrequencies;
  FrequencyWarper bark=new FrequencyWarper();
  this.criticalBandFilter=new PLPFilter[numberFilters];
  if (numberFftPoints == 0) {
    throw new IllegalArgumentException("Number of FFT points is zero");
  }
  if (numberFilters < 1) {
    throw new IllegalArgumentException("Number of filters illegal: " + numberFilters);
  }
  DFTFrequencies=new double[numberDFTPoints];
  nyquistFreq=sampleRate / 2;
  for (int i=0; i < numberDFTPoints; i++) {
    DFTFrequencies[i]=i * nyquistFreq / (numberDFTPoints - 1);
  }
  minBarkFreq=bark.hertzToBark(minFreq);
  maxBarkFreq=bark.hertzToBark(maxFreq);
  if (numberFilters < 1) {
    throw new IllegalArgumentException("Number of filters illegal: " + numberFilters);
  }
  deltaBarkFreq=(maxBarkFreq - minBarkFreq) / (numberFilters + 1);
  for (int i=0; i < numberFilters; i++) {
    centerFreq=bark.barkToHertz(minBarkFreq + i * deltaBarkFreq);
    criticalBandFilter[i]=new PLPFilter(DFTFrequencies,centerFreq);
  }
}
