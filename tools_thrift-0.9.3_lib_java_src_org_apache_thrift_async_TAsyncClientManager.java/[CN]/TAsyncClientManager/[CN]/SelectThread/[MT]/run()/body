{
  while (running) {
    try {
      try {
        if (timeoutWatchSet.size() == 0) {
          selector.select();
        }
 else {
          long nextTimeout=timeoutWatchSet.first().getTimeoutTimestamp();
          long selectTime=nextTimeout - System.currentTimeMillis();
          if (selectTime > 0) {
            selector.select(selectTime);
          }
 else {
            selector.selectNow();
          }
        }
      }
 catch (      IOException e) {
        LOGGER.error("Caught IOException in TAsyncClientManager!",e);
      }
      transitionMethods();
      timeoutMethods();
      startPendingMethods();
    }
 catch (    Exception exception) {
      LOGGER.error("Ignoring uncaught exception in SelectThread",exception);
    }
  }
  try {
    selector.close();
  }
 catch (  IOException ex) {
    LOGGER.warn("Could not close selector. This may result in leaked resources!",ex);
  }
}
