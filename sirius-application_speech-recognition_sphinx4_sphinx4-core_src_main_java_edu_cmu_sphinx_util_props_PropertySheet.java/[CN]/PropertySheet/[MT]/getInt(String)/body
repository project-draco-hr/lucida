{
  S4PropWrapper s4PropWrapper=getProperty(name,S4Integer.class);
  S4Integer s4Integer=(S4Integer)s4PropWrapper.getAnnotation();
  if (propValues.get(name) == null) {
    boolean isDefDefined=!(s4Integer.defaultValue() == S4Integer.NOT_DEFINED);
    if (s4Integer.mandatory()) {
      if (!isDefDefined)       throw new InternalConfigurationException(getInstanceName(),name,"mandatory property is not set!");
    }
 else     if (!isDefDefined)     throw new InternalConfigurationException(getInstanceName(),name,"no default value for non-mandatory property");
    propValues.put(name,s4Integer.defaultValue());
  }
  Object propObject=propValues.get(name);
  Integer propValue=propObject instanceof Integer ? (Integer)propObject : Integer.decode(flattenProp(name));
  int[] range=s4Integer.range();
  if (range.length != 2)   throw new InternalConfigurationException(getInstanceName(),name,Arrays.toString(range) + " is not of expected range type, which is {minValue, maxValue)");
  if (propValue < range[0] || propValue > range[1])   throw new InternalConfigurationException(getInstanceName(),name," is not in range (" + Arrays.toString(range) + ')');
  return propValue;
}
