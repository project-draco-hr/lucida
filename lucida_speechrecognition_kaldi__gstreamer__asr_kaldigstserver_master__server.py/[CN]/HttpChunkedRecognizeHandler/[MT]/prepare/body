def prepare(self):
    self.id = str(uuid.uuid4())
    self.final_hyp = ''
    self.final_result_queue = Queue()
    self.user_id = self.request.headers.get('device-id', 'none')
    self.content_id = self.request.headers.get('content-id', 'none')
    logging.info(("%s: OPEN: user='%s', content='%s'" % (self.id, self.user_id, self.content_id)))
    self.worker = None
    self.error_status = 0
    self.error_message = None
    try:
        self.worker = self.application.available_workers.pop()
        self.application.send_status_update()
        logging.info(('%s: Using worker %s' % (self.id, self.__str__())))
        self.worker.set_client_socket(self)
        content_type = self.request.headers.get('Content-Type', None)
        if content_type:
            content_type = content_type_to_caps(content_type)
            logging.info(('%s: Using content type: %s' % (self.id, content_type)))
        self.worker.write_message(json.dumps(dict(id=self.id, content_type=content_type, user_id=self.user_id, content_id=self.content_id)))
    except KeyError:
        logging.warn(('%s: No worker available for client request' % self.id))
        self.set_status(503)
        self.finish('No workers available')
