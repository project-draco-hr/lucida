@app.route('/image', methods=['GET', 'POST'])
def image():
    form = RegistrationForm(request.form)
    if (request.method == 'POST'):
        f = request.files['file']
        if (f and allowed_file(f.filename)):
            filename = secure_filename(f.filename)
            f.save(os.path.join(app.config['UPLOAD_FOLDER'], filename))
            speech = ('input-log/' + filename)
            t = datetime.now()
            img = (((((((log + 'image-') + str(t.month)) + str(t.day)) + str(t.hour)) + str(t.minute)) + str(t.second)) + '.jpg')
            urllib.urlretrieve(form.in_img.data, img)
            manager = multiprocessing.Manager()
            return_dict = manager.dict()
            fns = [req_vis, req_asr]
            data = [img, speech]
            proc = []
            for (idx, fn) in enumerate(fns):
                p = multiprocessing.Process(target=fn, args=(data[idx], return_dict))
                p.start()
                proc.append(p)
            for p in proc:
                p.join()
            question = re.sub('this', return_dict[img].strip(), return_dict[speech].strip()).strip()
            answer = req_qa(question).strip()
            data = [question, answer]
            return render_template('image.html', form=form, in_img=form.in_img.data, data=map(json.dumps, data))
    else:
        return render_template('image.html', form=form)
