{
  List<Pronunciation> pronunciations=new LinkedList<Pronunciation>();
  String line;
  int count=0;
  boolean isFiller=false;
  do {
    count++;
    String lookupWord=word;
    if (count > 1) {
      lookupWord=lookupWord + '(' + count+ ')';
    }
    line=dictionary.get(lookupWord);
    if (line != null) {
      StringTokenizer st=new StringTokenizer(line);
      String tag=st.nextToken();
      isFiller=tag.startsWith(FILLER_TAG);
      int unitCount=st.countTokens();
      ArrayList<Unit> units=new ArrayList<Unit>(unitCount);
      for (int i=0; i < unitCount; i++) {
        String unitName=st.nextToken();
        units.add(getCIUnit(unitName,isFiller));
      }
      pronunciations.add(new Pronunciation(units));
      if (!isFiller && addSilEndingPronunciation) {
        units.add(UnitManager.SILENCE);
        pronunciations.add(new Pronunciation(units));
      }
    }
  }
 while (line != null);
  Pronunciation[] pronunciationsArray=pronunciations.toArray(new Pronunciation[pronunciations.size()]);
  Word wordObject=createWord(word,pronunciationsArray,isFiller);
  for (  Pronunciation pronunciation : pronunciationsArray) {
    pronunciation.setWord(wordObject);
  }
  wordDictionary.put(word,wordObject);
  return wordObject;
}
