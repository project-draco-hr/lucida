{
  float[] features=FloatData.toFloatData(data).getValues();
  int dim=meansInvVars.length / gconsts.length;
  if (features.length != dim) {
    String fmt="feature vector must be of length %d, got %d";
    String msg=String.format(fmt,dim,features.length);
    throw new IllegalArgumentException(msg);
  }
  float[] likelihoods=Arrays.copyOf(gconsts,gconsts.length);
  for (int i=0; i < likelihoods.length; ++i) {
    for (int j=0; j < features.length; ++j) {
      int k=i * features.length + j;
      likelihoods[i]+=meansInvVars[k] * features[j];
      likelihoods[i]-=.5f * invVars[k] * features[j]* features[j];
    }
    likelihoods[i]=LogMath.getInstance().lnToLog(likelihoods[i]);
  }
  return likelihoods;
}
