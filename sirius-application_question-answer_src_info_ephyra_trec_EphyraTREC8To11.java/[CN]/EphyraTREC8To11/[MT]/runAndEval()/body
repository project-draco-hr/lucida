{
  EphyraTREC8To11 ephyra=new EphyraTREC8To11();
  float precision=0;
  float mrr=0;
  for (int i=0; i < qss.length; i++) {
    MsgPrinter.printQuestion(qss[i]);
    Logger.enableLogging(false);
    Result[] results=null;
    if (loadLog)     results=TREC13To16Parser.loadResults(qss[i],"FACTOID",logFile);
    if (results == null) {
      Logger.enableLogging(true);
      Logger.logFactoidStart(qss[i]);
      results=ephyra.askFactoid(qss[i],FACTOID_MAX_ANSWERS,FACTOID_ABS_THRESH);
    }
    boolean[] correct=new boolean[results.length];
    int firstCorrect=0;
    if (regexs[i] != null) {
      Pattern p=Pattern.compile(regexs[i]);
      for (int j=0; j < results.length; j++) {
        Matcher m=p.matcher(results[j].getAnswer());
        correct[j]=m.find();
        if (correct[j] && firstCorrect == 0)         firstCorrect=j + 1;
      }
    }
    if (firstCorrect > 0) {
      precision++;
      mrr+=((float)1) / firstCorrect;
    }
    Logger.logResultsJudged(results,correct);
    Logger.logFactoidEnd();
  }
  precision/=qss.length;
  mrr/=qss.length;
  Logger.logScores(precision,mrr);
}
