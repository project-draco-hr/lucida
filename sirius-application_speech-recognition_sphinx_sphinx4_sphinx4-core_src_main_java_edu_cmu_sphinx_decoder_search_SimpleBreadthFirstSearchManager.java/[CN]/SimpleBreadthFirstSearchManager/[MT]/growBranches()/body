{
  int mapSize=activeList.size() * 10;
  if (mapSize == 0) {
    mapSize=1;
  }
  growTimer.start();
  bestTokenMap=new HashMap<SearchState,Token>(mapSize);
  ActiveList oldActiveList=activeList;
  resultList=new LinkedList<Token>();
  activeList=activeListFactory.newInstance();
  threshold=oldActiveList.getBeamThreshold();
  wordThreshold=oldActiveList.getBestScore() + logRelativeWordBeamWidth;
  for (  Token token : oldActiveList) {
    collectSuccessorTokens(token);
  }
  growTimer.stop();
  totalHmms+=activeList.size();
  System.out.println("Frame: " + currentFrameNumber + " Hmms: "+ activeList.size()+ "  total "+ totalHmms);
  if (logger.isLoggable(Level.FINE)) {
    int hmms=activeList.size();
    totalHmms+=hmms;
    logger.fine("Frame: " + currentFrameNumber + " Hmms: "+ hmms+ "  total "+ totalHmms);
  }
}
