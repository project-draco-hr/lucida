{
  SearchState state=token.getSearchState();
  SearchStateArc[] arcs=state.getSuccessors();
  pw_in.printf("%d %d %d %d %f %d %d\n",currentFrameNumber,arcs.length,state.hashCode(),token.hashCode(),token.getScore(),(token.isFinal()) ? 1 : 0,(state instanceof WordSearchState) ? 1 : 0);
  for (  SearchStateArc arc : arcs) {
    SearchState nextState=arc.getState();
    Token predecessor=getResultListPredecessor(token);
    float logEntryScore=token.getScore() + arc.getProbability();
    Token newToken=new Token(predecessor,nextState,logEntryScore,arc.getInsertionProbability(),arc.getLanguageProbability(),currentFrameNumber);
    pw_in.printf("%d %f %d %d %f %d %d\n",newToken.hashCode(),newToken.getScore(),nextState.hashCode(),(nextState.isEmitting()) ? 1 : 0,arc.getProbability(),(newToken.isFinal()) ? 1 : 0,(nextState instanceof WordSearchState) ? 1 : 0);
    if (!newToken.isEmitting()) {
      if (!isVisited(newToken)) {
        collectSuccessorTokens2(newToken);
      }
    }
    activeList2.add(newToken);
  }
}
