{
  while (true) {
    try {
synchronized (audio) {
        audio.wait();
        AudioFormat format=audio.getAudioFormat();
        short[] data=audio.getAudioData();
        int start=Math.max(0,selectionStart);
        int end=selectionEnd;
        if (end == -1) {
          end=data.length;
        }
        DataLine.Info info=new DataLine.Info(SourceDataLine.class,format);
        line=(SourceDataLine)AudioSystem.getLine(info);
        line.open(format);
        line.start();
        byte[] frame=new byte[2];
        for (int i=start; i < end && i < data.length; i++) {
          Utils.toBytes(data[i],frame,false);
          line.write(frame,0,frame.length);
        }
        line.drain();
        line.close();
        line=null;
      }
    }
 catch (    Exception e) {
      e.printStackTrace();
      break;
    }
  }
}
