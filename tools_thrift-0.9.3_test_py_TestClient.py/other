import glob
import os
import sys
import time
import unittest
from optparse import OptionParser
parser = OptionParser()
parser.add_option('--genpydir', type='string', dest='genpydir', default='gen-py', help='include this local directory in sys.path for locating generated code')
parser.add_option('--port', type='int', dest='port', help='connect to server at port')
parser.add_option('--host', type='string', dest='host', help='connect to server')
parser.add_option('--zlib', action='store_true', dest='zlib', help='use zlib wrapper for compressed transport')
parser.add_option('--ssl', action='store_true', dest='ssl', help='use SSL for encrypted transport')
parser.add_option('--http', dest='http_path', help='Use the HTTP transport with the specified path')
parser.add_option('-v', '--verbose', action='store_const', dest='verbose', const=2, help='verbose output')
parser.add_option('-q', '--quiet', action='store_const', dest='verbose', const=0, help='minimal output')
parser.add_option('--protocol', dest='proto', type='string', help='protocol to use, one of: accel, binary, compact, json')
parser.add_option('--transport', dest='trans', type='string', help='transport to use, one of: buffered, framed')
parser.set_defaults(framed=False, http_path=None, verbose=1, host='localhost', port=9090, proto='binary')
(options, args) = parser.parse_args()
script_dir = os.path.abspath(os.path.dirname(__file__))
lib_dir = os.path.join(os.path.dirname(os.path.dirname(script_dir)), 'lib', 'py', 'build', 'lib.*')
sys.path.insert(0, os.path.join(script_dir, options.genpydir))
sys.path.insert(0, glob.glob(lib_dir)[0])
from ThriftTest import ThriftTest, SecondService
from ThriftTest.ttypes import *
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.transport import TZlibTransport
from thrift.protocol import TBinaryProtocol
from thrift.protocol import TCompactProtocol
from thrift.protocol import TJSONProtocol
if (__name__ == '__main__'):
    OwnArgsTestProgram(defaultTest='suite', testRunner=unittest.TextTestRunner(verbosity=1))
