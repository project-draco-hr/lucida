{
  try {
    String basename=input.getCanonicalPath();
    basename=basename.substring(0,basename.lastIndexOf('.'));
    File output=new File(basename + ".parses");
    BufferedReader br=new BufferedReader(new InputStreamReader(new FileInputStream(output),"ISO-8859-1"));
    ArrayList<String> as=new ArrayList<String>();
    String[][] ass=new String[sentCount][];
    String line;
    int previous=-1;
    while ((line=br.readLine()) != null) {
      Matcher parseM=PARSE_P.matcher(line);
      if (parseM.find()) {
        int sid=Integer.parseInt(parseM.group(1));
        String annotation=parseM.group(2).trim();
        if (sid != previous) {
          if (as.size() > 0)           ass[previous]=as.toArray(new String[as.size()]);
          as=new ArrayList<String>();
          previous=sid;
        }
        as.add(annotation);
      }
 else {
        if (!line.equals("ERROR: Found an empty input file... exiting."))         throw new IOException("Malformatted line: " + line);
      }
    }
    br.close();
    if (as.size() > 0)     ass[previous]=as.toArray(new String[as.size()]);
    for (int i=0; i < ass.length; i++)     if (ass[i] == null)     ass[i]=new String[0];
    return ass;
  }
 catch (  IOException e) {
    throw new IOException("Failed to parse output file.");
  }
}
