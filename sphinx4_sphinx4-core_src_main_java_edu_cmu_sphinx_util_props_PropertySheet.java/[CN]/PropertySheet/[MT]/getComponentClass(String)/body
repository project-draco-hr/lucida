{
  Class<? extends Configurable> defClass=null;
  if (propValues.get(propName) != null)   try {
    Class<?> objClass=Class.forName((String)propValues.get(propName));
    defClass=objClass.asSubclass(Configurable.class);
  }
 catch (  ClassNotFoundException e) {
    PropertySheet ps=cm.getPropertySheet(flattenProp(propName));
    defClass=ps.ownerClass;
  }
 else {
    S4Component comAnno=(S4Component)registeredProperties.get(propName).getAnnotation();
    defClass=comAnno.defaultClass();
    if (comAnno.mandatory())     defClass=null;
  }
  return defClass;
}
