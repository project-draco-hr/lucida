{
  Semiring semiring=fst.getSemiring();
  if (semiring == null) {
    System.out.println("Fst has no semiring.");
    return;
  }
  HashSet<State> accessible=new HashSet<State>();
  HashSet<State> coaccessible=new HashSet<State>();
  @SuppressWarnings("unchecked") ArrayList<Arc>[] exploredArcs=new ArrayList[fst.getNumStates()];
  ArrayList<ArrayList<State>> paths=new ArrayList<ArrayList<State>>();
  paths.add(new ArrayList<State>());
  depthFirstSearch(fst,accessible,paths,exploredArcs,coaccessible);
  HashSet<State> toDelete=new HashSet<State>();
  for (int i=0; i < fst.getNumStates(); i++) {
    State s=fst.getState(i);
    if (!(accessible.contains(s) || coaccessible.contains(s))) {
      toDelete.add(s);
    }
  }
  fst.deleteStates(toDelete);
}
