{
  totalSamplesRead=0;
  logger.info("started recording");
  if (keepDataReference) {
    currentUtterance=new Utterance("Microphone",audioStream.getFormat());
  }
  audioList.add(new DataStartSignal(sampleRate));
  logger.info("DataStartSignal added");
  try {
    audioLine.start();
    while (!done) {
      Data data=readData(currentUtterance);
      if (data == null) {
        done=true;
        break;
      }
      audioList.add(data);
    }
    audioLine.flush();
    if (closeBetweenUtterances) {
      audioStream.close();
      audioLine.close();
      System.err.println("set to null");
      audioLine=null;
    }
  }
 catch (  IOException ioe) {
    logger.warning("IO Exception " + ioe.getMessage());
    ioe.printStackTrace();
  }
  long duration=(long)(((double)totalSamplesRead / (double)audioStream.getFormat().getSampleRate()) * 1000.0);
  audioList.add(new DataEndSignal(duration));
  logger.info("DataEndSignal ended");
  logger.info("stopped recording");
synchronized (lock) {
    lock.notify();
  }
}
