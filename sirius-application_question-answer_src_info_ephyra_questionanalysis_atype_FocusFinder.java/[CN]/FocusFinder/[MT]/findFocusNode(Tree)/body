{
  Tree focus=null;
  TreeHelper.markHeadNode(tree);
  for (  String whLabel : whLabels) {
    Tree whPhrase=TreeHelper.findNodeWithChild(tree,whLabel);
    if (whPhrase != null && whPhrase.numOfChildren() > 1 && !whPhrase.getLabel().equals("SBAR")) {
      Tree head=getHeadWordOrPhrase(whPhrase);
      TreeHelper.markHeadNode(head);
      String headStr=head.getHeadWord();
      if (headStr.matches("kinds?") || headStr.matches("types?") || headStr.matches("genres?")) {
        Tree headNode=whPhrase.getHeadNode();
        Tree parent=TreeHelper.locateParent(headNode,tree);
        Tree pp=parent.getChild("PP");
        if (pp == null && parent.getLabel().matches("WHNP|NP")) {
          Tree grandParent=TreeHelper.locateParent(parent,tree);
          pp=grandParent.getChild("PP");
        }
        if (pp != null && pp.getChild("IN").getHeadWord().equals("of")) {
          focus=getHeadWordOrPhrase(pp.getChild("NP"));
          break;
        }
      }
      if (head.getLabel().equals("POS")) {
        if (whPhrase.numOfChildren() > 2)         return getHeadWordOrPhrase(whPhrase.getChild(whPhrase.getHeadNodeChildIndex() - 1));
      }
      return head;
    }
  }
  if (focus != null)   return focus;
  for (  Tree template : treeTemplates) {
    Tree node=TreeHelper.extractNode(tree,template);
    if (node == null)     continue;
    focus=getHeadWordOrPhrase(node);
    if (focus != null)     return focus;
  }
  List<Tree> nodes=TreeHelper.getPreterminalsAfter(tree,"NN.?|JJ","WDT");
  if (nodes == null)   nodes=TreeHelper.getPreterminalsAfter(tree,"NN.?|JJ","WP");
  if (nodes != null) {
    focus=Tree.newNode("NP",nodes);
    return getHeadWordOrPhrase(focus);
  }
  List<Tree> tags=TreeHelper.getPreterminals(tree).asList();
  nodes=new ArrayList<Tree>();
  for (ListIterator<Tree> it=tags.listIterator(); it.hasNext(); ) {
    Tree tag=it.next();
    if (tag.getHeadWord().toLowerCase().equals("how") && it.next().getHeadWord().toLowerCase().matches("many|much")) {
      for (ListIterator<Tree> it2=tags.listIterator(it.nextIndex()); it2.hasNext() && it2.next().getLabel().matches("NN.?"); ) {
        nodes.add(tags.get(it2.previousIndex()));
      }
      break;
    }
  }
  if (nodes.size() > 0) {
    focus=Tree.newNode("NP",nodes);
    return getHeadWordOrPhrase(focus);
  }
  return null;
}
