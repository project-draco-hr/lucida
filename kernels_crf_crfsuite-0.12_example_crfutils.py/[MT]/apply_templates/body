def apply_templates(X, templates):
    "\n    Generate features for an item sequence by applying feature templates.\n    A feature template consists of a tuple of (name, offset) pairs,\n    where name and offset specify a field name and offset from which\n    the template extracts a feature value. Generated features are stored\n    in the 'F' field of each item in the sequence.\n\n    @type   X:      list of mapping objects\n    @param  X:      The item sequence.\n    @type   template:   tuple of (str, int)\n    @param  template:   The feature template.\n    "
    for template in templates:
        name = '|'.join([('%s[%d]' % (f, o)) for (f, o) in template])
        for t in range(len(X)):
            values = []
            for (field, offset) in template:
                p = (t + offset)
                if (p not in range(len(X))):
                    values = []
                    break
                values.append(X[p][field])
            if values:
                X[t]['F'].append(('%s=%s' % (name, '|'.join(values))))
