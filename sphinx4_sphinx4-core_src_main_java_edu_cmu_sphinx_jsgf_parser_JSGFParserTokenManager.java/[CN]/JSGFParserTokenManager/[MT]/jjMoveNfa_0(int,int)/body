{
  int startsAt=0;
  jjnewStateCnt=54;
  int i=1;
  jjstateSet[0]=startState;
  int kind=0x7fffffff;
  for (; ; ) {
    if (++jjround == 0x7fffffff)     ReInitRounds();
    if (curChar < 64) {
      long l=1L << curChar;
      do {
switch (jjstateSet[--i]) {
case 3:
          if ((0x7ff30fa00000000L & l) != 0L) {
            if (kind > 23)             kind=23;
            jjCheckNAdd(37);
          }
 else           if (curChar == 34)           jjCheckNAddStates(0,2);
 else           if (curChar == 46)           jjCheckNAdd(5);
 else           if (curChar == 47)           jjstateSet[jjnewStateCnt++]=2;
        if ((0x3ff000000000000L & l) != 0L) {
          if (kind > 16)           kind=16;
          jjCheckNAddStates(3,10);
        }
 else         if (curChar == 39)         jjAddStates(11,12);
      break;
case 0:
    if (curChar == 42)     jjstateSet[jjnewStateCnt++]=1;
  break;
case 1:
if ((0xffff7fffffffffffL & l) != 0L && kind > 7) kind=7;
break;
case 2:
if (curChar == 42) jjstateSet[jjnewStateCnt++]=0;
break;
case 4:
if (curChar == 46) jjCheckNAdd(5);
break;
case 5:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 18) kind=18;
jjCheckNAddStates(13,15);
break;
case 7:
if ((0x280000000000L & l) != 0L) jjCheckNAdd(8);
break;
case 8:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 18) kind=18;
jjCheckNAddTwoStates(8,9);
break;
case 10:
if (curChar == 39) jjAddStates(11,12);
break;
case 11:
if ((0xffffff7fffffdbffL & l) != 0L) jjCheckNAdd(12);
break;
case 12:
if (curChar == 39 && kind > 20) kind=20;
break;
case 14:
if ((0x8400000000L & l) != 0L) jjCheckNAdd(12);
break;
case 15:
if ((0xff000000000000L & l) != 0L) jjCheckNAddTwoStates(16,12);
break;
case 16:
if ((0xff000000000000L & l) != 0L) jjCheckNAdd(12);
break;
case 17:
if ((0xf000000000000L & l) != 0L) jjstateSet[jjnewStateCnt++]=18;
break;
case 18:
if ((0xff000000000000L & l) != 0L) jjCheckNAdd(16);
break;
case 19:
if (curChar == 34) jjCheckNAddStates(0,2);
break;
case 20:
if ((0xfffffffbffffdbffL & l) != 0L) jjCheckNAddStates(0,2);
break;
case 22:
if ((0x8400000000L & l) != 0L) jjCheckNAddStates(0,2);
break;
case 23:
if (curChar == 34 && kind > 21) kind=21;
break;
case 24:
if ((0xff000000000000L & l) != 0L) jjCheckNAddStates(16,19);
break;
case 25:
if ((0xff000000000000L & l) != 0L) jjCheckNAddStates(0,2);
break;
case 26:
if ((0xf000000000000L & l) != 0L) jjstateSet[jjnewStateCnt++]=27;
break;
case 27:
if ((0xff000000000000L & l) != 0L) jjCheckNAdd(25);
break;
case 29:
jjCheckNAddStates(20,22);
break;
case 31:
if ((0x8400000000L & l) != 0L) jjCheckNAddStates(20,22);
break;
case 33:
if ((0xff000000000000L & l) != 0L) jjCheckNAddStates(23,26);
break;
case 34:
if ((0xff000000000000L & l) != 0L) jjCheckNAddStates(20,22);
break;
case 35:
if ((0xf000000000000L & l) != 0L) jjstateSet[jjnewStateCnt++]=36;
break;
case 36:
if ((0xff000000000000L & l) != 0L) jjCheckNAdd(34);
break;
case 37:
if ((0x7ff30fa00000000L & l) == 0L) break;
if (kind > 23) kind=23;
jjCheckNAdd(37);
break;
case 38:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 16) kind=16;
jjCheckNAddStates(3,10);
break;
case 39:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 16) kind=16;
jjCheckNAdd(39);
break;
case 40:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(40,41);
break;
case 41:
if (curChar != 46) break;
if (kind > 18) kind=18;
jjCheckNAddStates(27,29);
break;
case 42:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 18) kind=18;
jjCheckNAddStates(27,29);
break;
case 44:
if ((0x280000000000L & l) != 0L) jjCheckNAdd(45);
break;
case 45:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 18) kind=18;
jjCheckNAddTwoStates(45,9);
break;
case 46:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(46,47);
break;
case 48:
if ((0x280000000000L & l) != 0L) jjCheckNAdd(49);
break;
case 49:
if ((0x3ff000000000000L & l) == 0L) break;
if (kind > 18) kind=18;
jjCheckNAddTwoStates(49,9);
break;
case 50:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddStates(30,32);
break;
case 52:
if ((0x280000000000L & l) != 0L) jjCheckNAdd(53);
break;
case 53:
if ((0x3ff000000000000L & l) != 0L) jjCheckNAddTwoStates(53,9);
break;
default :
break;
}
}
 while (i != startsAt);
}
 else if (curChar < 128) {
long l=1L << (curChar & 077);
do {
switch (jjstateSet[--i]) {
case 3:
if ((0x47fffffed7ffffffL & l) != 0L) {
if (kind > 23) kind=23;
jjCheckNAdd(37);
}
 else if (curChar == 123) jjCheckNAddStates(20,22);
break;
case 1:
if (kind > 7) kind=7;
break;
case 6:
if ((0x2000000020L & l) != 0L) jjAddStates(33,34);
break;
case 9:
if ((0x5000000050L & l) != 0L && kind > 18) kind=18;
break;
case 11:
if ((0xffffffffefffffffL & l) != 0L) jjCheckNAdd(12);
break;
case 13:
if (curChar == 92) jjAddStates(35,37);
break;
case 14:
if ((0x14404410000000L & l) != 0L) jjCheckNAdd(12);
break;
case 20:
if ((0xffffffffefffffffL & l) != 0L) jjCheckNAddStates(0,2);
break;
case 21:
if (curChar == 92) jjAddStates(38,40);
break;
case 22:
if ((0x14404410000000L & l) != 0L) jjCheckNAddStates(0,2);
break;
case 28:
if (curChar == 123) jjCheckNAddStates(20,22);
break;
case 29:
if ((0xdfffffffffffffffL & l) != 0L) jjCheckNAddStates(20,22);
break;
case 30:
if (curChar == 92) jjAddStates(41,43);
break;
case 31:
if ((0x2014404410000000L & l) != 0L) jjCheckNAddStates(20,22);
break;
case 32:
if (curChar == 125 && kind > 22) kind=22;
break;
case 37:
if ((0x47fffffed7ffffffL & l) == 0L) break;
if (kind > 23) kind=23;
jjCheckNAdd(37);
break;
case 43:
if ((0x2000000020L & l) != 0L) jjAddStates(44,45);
break;
case 47:
if ((0x2000000020L & l) != 0L) jjAddStates(46,47);
break;
case 51:
if ((0x2000000020L & l) != 0L) jjAddStates(48,49);
break;
default :
break;
}
}
 while (i != startsAt);
}
 else {
int hiByte=(int)(curChar >> 8);
int i1=hiByte >> 6;
long l1=1L << (hiByte & 077);
int i2=(curChar & 0xff) >> 6;
long l2=1L << (curChar & 077);
do {
switch (jjstateSet[--i]) {
case 3:
case 37:
if (!jjCanMove_1(hiByte,i1,i2,l1,l2)) break;
if (kind > 23) kind=23;
jjCheckNAdd(37);
break;
case 1:
if (jjCanMove_0(hiByte,i1,i2,l1,l2) && kind > 7) kind=7;
break;
case 11:
if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjstateSet[jjnewStateCnt++]=12;
break;
case 20:
if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjAddStates(0,2);
break;
case 29:
if (jjCanMove_0(hiByte,i1,i2,l1,l2)) jjAddStates(20,22);
break;
default :
break;
}
}
 while (i != startsAt);
}
if (kind != 0x7fffffff) {
jjmatchedKind=kind;
jjmatchedPos=curPos;
kind=0x7fffffff;
}
++curPos;
if ((i=jjnewStateCnt) == (startsAt=54 - (jjnewStateCnt=startsAt))) return curPos;
try {
curChar=input_stream.readChar();
}
 catch (java.io.IOException e) {
return curPos;
}
}
}
