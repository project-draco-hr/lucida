{
  ClassifierLearner learner;
  if (name.equalsIgnoreCase("KNN")) {
    learner=new KnnLearner();
  }
 else   if (name.equalsIgnoreCase("KWAY_MIX")) {
    learner=new KWayMixtureLearner();
  }
 else   if (name.equalsIgnoreCase("MAX_ENT")) {
    learner=new MaxEntLearner();
  }
 else   if (name.equalsIgnoreCase("BWINNOW_OVA")) {
    learner=new OneVsAllLearner(new BalancedWinnow());
  }
 else   if (name.equalsIgnoreCase("MPERCEPTRON_OVA")) {
    learner=new OneVsAllLearner(new MarginPerceptron());
  }
 else   if (name.equalsIgnoreCase("NBAYES_OVA")) {
    learner=new OneVsAllLearner(new NaiveBayes());
  }
 else   if (name.equalsIgnoreCase("VPERCEPTRON_OVA")) {
    learner=new OneVsAllLearner(new VotedPerceptron());
  }
 else   if (name.equalsIgnoreCase("ADABOOST_OVA")) {
    learner=new OneVsAllLearner(new AdaBoost());
  }
 else   if (name.equalsIgnoreCase("ADABOOST_CB")) {
    learner=new CascadingBinaryLearner(new AdaBoost());
  }
 else   if (name.equalsIgnoreCase("ADABOOST_MFF")) {
    learner=new MostFrequentFirstLearner(new AdaBoost());
  }
 else   if (name.equalsIgnoreCase("ADABOOSTL_OVA")) {
    learner=new OneVsAllLearner(new AdaBoost.L());
  }
 else   if (name.equalsIgnoreCase("ADABOOSTL_CB")) {
    learner=new CascadingBinaryLearner(new AdaBoost.L());
  }
 else   if (name.equalsIgnoreCase("ADABOOSTL_MFF")) {
    learner=new MostFrequentFirstLearner(new AdaBoost.L());
  }
 else   if (name.equalsIgnoreCase("DTREE_OVA")) {
    learner=new OneVsAllLearner(new DecisionTreeLearner());
  }
 else   if (name.equalsIgnoreCase("DTREE_CB")) {
    learner=new CascadingBinaryLearner(new DecisionTreeLearner());
  }
 else   if (name.equalsIgnoreCase("DTREE_MFF")) {
    learner=new MostFrequentFirstLearner(new DecisionTreeLearner());
  }
 else   if (name.equalsIgnoreCase("NEGBI_OVA")) {
    learner=new OneVsAllLearner(new NegativeBinomialLearner());
  }
 else   if (name.equalsIgnoreCase("NEGBI_CB")) {
    learner=new CascadingBinaryLearner(new NegativeBinomialLearner());
  }
 else   if (name.equalsIgnoreCase("NEGBI_MFF")) {
    learner=new MostFrequentFirstLearner(new NegativeBinomialLearner());
  }
 else   if (name.equalsIgnoreCase("SVM_OVA")) {
    learner=new OneVsAllLearner(new SVMLearner());
  }
 else   if (name.equalsIgnoreCase("SVM_OVA_CONF1")) {
    svm_parameter param=new svm_parameter();
    param.svm_type=svm_parameter.C_SVC;
    param.kernel_type=svm_parameter.POLY;
    param.degree=2;
    param.gamma=1;
    param.coef0=0;
    param.nu=0.5;
    param.cache_size=40;
    param.C=1;
    param.eps=1e-3;
    param.p=0.1;
    param.shrinking=1;
    param.nr_weight=0;
    param.weight_label=new int[0];
    param.weight=new double[0];
    learner=new OneVsAllLearner(new SVMLearner(param));
  }
 else   if (name.equalsIgnoreCase("SVM_CB")) {
    learner=new CascadingBinaryLearner(new SVMLearner());
  }
 else   if (name.equalsIgnoreCase("SVM_MFF")) {
    learner=new MostFrequentFirstLearner(new SVMLearner());
  }
 else {
    System.err.println("Unrecognized learner name: " + name);
    learner=null;
  }
  return learner;
}
