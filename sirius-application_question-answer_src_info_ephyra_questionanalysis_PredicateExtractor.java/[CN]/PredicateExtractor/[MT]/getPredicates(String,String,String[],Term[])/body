{
  if (!containsPredicate(qn))   return new Predicate[0];
  String statement=questionToStatement(qn,verbMod,ats);
  String[][] ass=ASSERT.annotatePredicates(new String[]{statement});
  String[] as=(ass.length > 0) ? ass[0] : new String[0];
  List<Predicate> predicates=new ArrayList<Predicate>();
  for (int i=0; i < as.length; i++) {
    Predicate predicate=null;
    try {
      predicate=new Predicate(statement,as[i],terms);
    }
 catch (    ParseException e) {
      continue;
    }
    predicates.add(predicate);
  }
  boolean missingArgs=false;
  for (  Predicate p : predicates) {
    if (p.dropArgs(PERSON_R) | p.dropArgs(THING_R) | p.dropArgs(DATE_TIME_R)| p.dropArgs(DURATION_R)| p.dropArgs(LOCATION_R)| p.dropArgs(PURPOSE_R)| p.dropArgs(MANNER_R)| p.dropArgs(QUANTIFICATION_R)| p.dropArgs(UNKNOWN_R))     missingArgs=true;
  }
  return (missingArgs) ? predicates.toArray(new Predicate[predicates.size()]) : new Predicate[0];
}
