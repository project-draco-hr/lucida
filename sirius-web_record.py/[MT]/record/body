def record():
    '\n    Record a word or words from the microphone and\n    return the data as an array of signed shorts.\n\n    Normalizes the audio, trims silence from the\n    start and end, and pads with 0.5 seconds of\n    blank sound to make sure VLC et al can play\n    it without getting chopped off.\n    '
    p = pyaudio.PyAudio()
    try:
        stream = p.open(format=FORMAT, channels=1, rate=RATE, input=True, output=True, frames_per_buffer=CHUNK_SIZE)
    except IOError:
        return (0, None)
    num_silent = 0
    snd_started = False
    r = array('h')
    while 1:
        snd_data = array('h', stream.read(CHUNK_SIZE))
        if (byteorder == 'big'):
            snd_data.byteswap()
        r.extend(snd_data)
        silent = is_silent(snd_data)
        if (silent and snd_started):
            num_silent += 1
        elif ((not silent) and (not snd_started)):
            snd_started = True
        if (snd_started and (num_silent > 30)):
            break
    sample_width = p.get_sample_size(FORMAT)
    stream.stop_stream()
    stream.close()
    p.terminate()
    r = normalize(r)
    r = add_silence(r, 1)
    return (sample_width, r)
