def filter(self, reference, recognized, alignment):
    isOov = [False for al in alignment]
    state = False
    for ii in range(len(alignment)):
        if (alignment[ii][0] is not None):
            state = (alignment[ii][0] not in self.vocabulary)
        isOov[ii] = (isOov[ii] or state)
    state = False
    for ii in reversed(range(len(alignment))):
        if (alignment[ii][0] is not None):
            state = (alignment[ii][0] not in self.vocabulary)
        isOov[ii] = (isOov[ii] or state)
    if (self.filterMode == 'oov'):
        alignment = [al for (al, flag) in zip(alignment, isOov) if flag]
    elif (self.filterMode == 'iv'):
        alignment = [al for (al, flag) in zip(alignment, isOov) if (not flag)]
    reference = [r for (r, s) in alignment if r]
    recognized = [s for (r, s) in alignment if s]
    return (reference, recognized, alignment)
