{
  logger.fine("Loading density file from: " + path);
  InputStream inputStream=getDataStream(path);
  if (inputStream == null) {
    throw new FileNotFoundException("Error trying to read file " + path);
  }
  ExtendedStreamTokenizer est=new ExtendedStreamTokenizer(inputStream,'#',false);
  Pool<float[]> pool=new Pool<float[]>(path);
  est.expectString("param");
  int numStates=est.getInt("numStates");
  int numStreams=est.getInt("numStreams");
  int numGaussiansPerState=est.getInt("numGaussiansPerState");
  pool.setFeature(NUM_SENONES,numStates);
  pool.setFeature(NUM_STREAMS,numStreams);
  pool.setFeature(NUM_GAUSSIANS_PER_STATE,numGaussiansPerState);
  int vectorLength=39;
  for (int i=0; i < numStates; i++) {
    est.expectString("mgau");
    est.expectInt("mgau index",i);
    est.expectString("feat");
    est.expectInt("feat index",0);
    for (int j=0; j < numGaussiansPerState; j++) {
      est.expectString("density");
      est.expectInt("densityValue",j);
      float[] density=new float[vectorLength];
      for (int k=0; k < vectorLength; k++) {
        density[k]=est.getFloat("val");
        if (density[k] < floor) {
          density[k]=floor;
        }
      }
      int id=i * numGaussiansPerState + j;
      pool.put(id,density);
    }
  }
  est.close();
  return pool;
}
