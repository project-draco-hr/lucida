{
  for (  TProtocolFactory protoFactory : getProtocols()) {
    TestHandler handler=new TestHandler();
    ThriftTest.Processor processor=new ThriftTest.Processor(handler);
    startServer(processor,protoFactory);
    TSocket socket=new TSocket(HOST,PORT);
    socket.setTimeout(SOCKET_TIMEOUT);
    TTransport transport=getClientTransport(socket);
    TProtocol protocol=protoFactory.getProtocol(transport);
    ThriftTest.Client testClient=new ThriftTest.Client(protocol);
    open(transport);
    for (int i=0; i < NUM_QUERIES; ++i) {
      testClient.testI32(1);
    }
    server.stop();
    for (int i=0; i < NUM_QUERIES; ++i) {
      try {
        testClient.testI32(1);
      }
 catch (      TTransportException e) {
        System.err.println(e);
        e.printStackTrace();
        if (e.getCause() instanceof java.net.SocketTimeoutException) {
          fail("timed out when it should have thrown another kind of error!");
        }
      }
    }
    transport.close();
    stopServer();
  }
}
