{
  Word[] classes=new Word[wordSequence.size()];
  float wordToClassProb=0;
  for (int i=0; i < classes.length; i++) {
    Word sourceWord=wordSequence.getWord(i);
    ClassProbability classProbability=classMap.getClassProbability(sourceWord.getSpelling());
    classes[i]=(classProbability == null ? sourceWord : classMap.getClassAsWord(classProbability.getClassName()));
    if (i == classes.length - 1) {
      if (classProbability != null) {
        wordToClassProb=classProbability.getLogProbability();
      }
    }
  }
  float classBasedProbability=classLM.getProbability(new WordSequence(classes));
  return classBasedProbability + wordToClassProb;
}
