{
  if (state_ == FrameBufferState.READING_FRAME_SIZE) {
    if (!internalRead()) {
      return false;
    }
    if (buffer_.remaining() == 0) {
      int frameSize=buffer_.getInt(0);
      if (frameSize <= 0) {
        LOGGER.error("Read an invalid frame size of " + frameSize + ". Are you using TFramedTransport on the client side?");
        return false;
      }
      if (frameSize > MAX_READ_BUFFER_BYTES) {
        LOGGER.error("Read a frame size of " + frameSize + ", which is bigger than the maximum allowable buffer size for ALL connections.");
        return false;
      }
      if (readBufferBytesAllocated.get() + frameSize > MAX_READ_BUFFER_BYTES) {
        return true;
      }
      readBufferBytesAllocated.addAndGet(frameSize + 4);
      buffer_=ByteBuffer.allocate(frameSize + 4);
      buffer_.putInt(frameSize);
      state_=FrameBufferState.READING_FRAME;
    }
 else {
      return true;
    }
  }
  if (state_ == FrameBufferState.READING_FRAME) {
    if (!internalRead()) {
      return false;
    }
    if (buffer_.remaining() == 0) {
      selectionKey_.interestOps(0);
      state_=FrameBufferState.READ_FRAME_COMPLETE;
    }
    return true;
  }
  LOGGER.error("Read was called but state is invalid (" + state_ + ")");
  return false;
}
