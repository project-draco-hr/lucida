{
  Lattice lattice=new Lattice(result);
  LatticeOptimizer lop=new LatticeOptimizer(lattice);
  lop.optimize();
  lattice.computeNodePosteriors(languageWeightAdjustment);
  SausageMaker sm=new SausageMaker(lattice);
  Sausage s=sm.makeSausage();
  if (dumpLattice) {
    lattice.dumpAISee("mapLattice.gdl","MAP Lattice");
  }
  if (dumpSausage) {
  }
  WordResultPath mapPath=new WordResultPath();
  List<Token> wordTokens=getWordTokens(result.getBestToken());
  int slot=0;
  for (  Token wordToken : wordTokens) {
    String word=wordToken.getWord().getSpelling();
    WordResult wr=null;
    ConfusionSet cs=null;
    while (slot < s.size() && wr == null) {
      cs=s.getConfusionSet(slot);
      wr=cs.getWordResult(word);
      if (wr == null) {
        slot++;
      }
    }
    if (wr != null) {
      mapPath.add(wr);
    }
 else {
      cs.dump("Slot " + slot);
      throw new Error("Can't find WordResult in ConfidenceResult slot " + slot + " for word "+ word);
    }
    slot++;
  }
  return (new MAPConfidenceResult(s,mapPath));
}
