{
  try {
    while (!stopped_) {
      select();
      processAcceptedConnections();
      processInterestChanges();
    }
    for (    SelectionKey selectionKey : selector.keys()) {
      cleanupSelectionKey(selectionKey);
    }
  }
 catch (  Throwable t) {
    LOGGER.error("run() on SelectorThread exiting due to uncaught error",t);
  }
 finally {
    try {
      selector.close();
    }
 catch (    IOException e) {
      LOGGER.error("Got an IOException while closing selector!",e);
    }
    TThreadedSelectorServer.this.stop();
  }
}
