def send_adaptation_state(self):
    if hasattr(self.decoder_pipeline, 'get_adaptation_state'):
        logger.info(('%s: Sending adaptation state to client...' % self.request_id))
        adaptation_state = self.decoder_pipeline.get_adaptation_state()
        event = dict(status=common.STATUS_SUCCESS, hascoachresponse=True, coachresponse=call_commandcenter(self.coachtranscript), adaptation_state=dict(id=self.request_id, value=base64.b64encode(zlib.compress(adaptation_state)), type='string+gzip+base64', time=time.strftime('%Y-%m-%dT%H:%M:%S')))
        self.coachtranscript = empty_response
        try:
            self.send(json.dumps(event))
        except:
            e = sys.exc_info()[1]
            logger.warning(('Failed to send event to master: ' + str(e)))
    else:
        logger.info(('%s: Adaptation state not supported by the decoder, not sending it.' % self.request_id))
