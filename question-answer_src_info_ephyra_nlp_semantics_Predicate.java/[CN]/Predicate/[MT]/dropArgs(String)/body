{
  boolean dropped=false;
  ArrayList<String> droppedArgs=new ArrayList<String>();
  for (int i=0; i < args.length; i++)   if (args[i] != null && args[i].contains(s)) {
    args[i]=null;
    dropped=true;
    droppedArgs.add("ARG" + i);
  }
  if (argLOC != null && argLOC.contains(s)) {
    argLOC=null;
    dropped=true;
    droppedArgs.add("ARGM-LOC");
  }
  if (argCAU != null && argCAU.contains(s)) {
    argCAU=null;
    dropped=true;
    droppedArgs.add("ARGM-CAU");
  }
  if (argEXT != null && argEXT.contains(s)) {
    argEXT=null;
    dropped=true;
    droppedArgs.add("ARGM-EXT");
  }
  if (argTMP != null && argTMP.contains(s)) {
    argTMP=null;
    dropped=true;
    droppedArgs.add("ARGM-TMP");
  }
  if (argDIS != null && argDIS.contains(s)) {
    argDIS=null;
    dropped=true;
    droppedArgs.add("ARGM-DIS");
  }
  if (argPNC != null && argPNC.contains(s)) {
    argPNC=null;
    dropped=true;
    droppedArgs.add("ARGM-PNC");
  }
  if (argADV != null && argADV.contains(s)) {
    argADV=null;
    dropped=true;
    droppedArgs.add("ARGM-ADV");
  }
  if (argMNR != null && argMNR.contains(s)) {
    argMNR=null;
    dropped=true;
    droppedArgs.add("ARGM-MNR");
  }
  if (argNEG != null && argNEG.contains(s)) {
    argNEG=null;
    dropped=true;
    droppedArgs.add("ARGM-NEG");
  }
  if (argDIR != null && argDIR.contains(s)) {
    argDIR=null;
    dropped=true;
    droppedArgs.add("ARGM-DIR");
  }
  if (argMOD != null && argMOD.contains(s)) {
    argMOD=null;
    dropped=true;
    droppedArgs.add("ARGM-MOD");
  }
  if (droppedArgs.size() > 0) {
    String[] missing=new String[droppedArgs.size() + missingArgs.length];
    droppedArgs.toArray(missing);
    for (int i=0; i < missingArgs.length; i++)     missing[droppedArgs.size() + i]=missingArgs[i];
    missingArgs=missing;
    setArgTerms(argTerms);
  }
  return dropped;
}
