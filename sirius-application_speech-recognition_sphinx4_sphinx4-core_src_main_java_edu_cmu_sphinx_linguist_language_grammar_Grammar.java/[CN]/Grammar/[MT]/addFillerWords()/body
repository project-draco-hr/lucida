{
  Set<GrammarNode> nodes=new HashSet<GrammarNode>(getGrammarNodes());
  Word[] fillers=getInterWordFillers();
  if (fillers.length == 0) {
    return;
  }
  for (  GrammarNode wordNode : nodes) {
    if (!wordNode.isEmpty() && !wordNode.getWord().isFiller()) {
      GrammarNode wordExitNode=wordNode.splitNode(maxIdentity + 1);
      add(wordExitNode);
      GrammarNode fillerStart=createGrammarNode(false);
      GrammarNode fillerEnd=createGrammarNode(false);
      fillerEnd.add(fillerStart,0.0f);
      fillerEnd.add(wordExitNode,0.0f);
      wordNode.add(fillerStart,0.0f);
      for (      Word filler : fillers) {
        GrammarNode fnode=createGrammarNode(maxIdentity + 1,filler.getSpelling());
        fillerStart.add(fnode,0.0f);
        fnode.add(fillerEnd,0.0f);
      }
    }
  }
}
