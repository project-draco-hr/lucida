{
  int fillerCount=0;
  Map<Word,Integer> countMap=new HashMap<Word,Integer>();
  Collections.sort(tokenList,Scoreable.COMPARATOR);
  for (Iterator<Token> i=tokenList.iterator(); i.hasNext(); ) {
    Token token=i.next();
    WordSearchState wordState=(WordSearchState)token.getSearchState();
    Word word=wordState.getPronunciation().getWord();
    if (maxFiller > 0) {
      if (word.isFiller()) {
        if (fillerCount < maxFiller) {
          fillerCount++;
        }
 else {
          i.remove();
          continue;
        }
      }
    }
    if (maxPathsPerWord > 0) {
      Integer count=countMap.get(word);
      int c=count == null ? 0 : count;
      if (c < maxPathsPerWord - 1) {
        countMap.put(word,c + 1);
      }
 else {
        i.remove();
      }
    }
  }
  if (tokenList.size() > absoluteBeamWidth) {
    tokenList=tokenList.subList(0,absoluteBeamWidth);
  }
  return this;
}
