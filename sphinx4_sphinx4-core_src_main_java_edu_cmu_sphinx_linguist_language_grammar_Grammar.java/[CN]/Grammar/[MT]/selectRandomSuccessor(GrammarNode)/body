{
  GrammarArc[] arcs=node.getSuccessors();
  if (arcs.length > 1) {
    double[] linWeights=new double[arcs.length];
    double linWeightsSum=0;
    final double EPS=1E-10;
    for (int i=0; i < linWeights.length; i++) {
      linWeights[i]=(arcs[0].getProbability() + EPS) / (arcs[i].getProbability() + EPS);
      linWeightsSum+=linWeights[i];
    }
    for (int i=0; i < linWeights.length; i++) {
      linWeights[i]/=linWeightsSum;
    }
    double selIndex=randomizer.nextDouble();
    int index=0;
    for (int i=0; selIndex > EPS; i++) {
      index=i;
      selIndex-=linWeights[i];
    }
    return arcs[index].getGrammarNode();
  }
 else {
    return arcs[0].getGrammarNode();
  }
}
