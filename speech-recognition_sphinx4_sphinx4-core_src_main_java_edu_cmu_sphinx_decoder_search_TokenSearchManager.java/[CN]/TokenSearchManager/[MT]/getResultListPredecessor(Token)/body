{
  if (keepAllTokens) {
    return token;
  }
  if (!buildWordLattice) {
    if (token.isWord())     return token;
 else     return token.getPredecessor();
  }
  float logAcousticScore=0.0f;
  float logLanguageScore=0.0f;
  float logInsertionScore=0.0f;
  while (token != null && !token.isWord()) {
    logAcousticScore+=token.getAcousticScore();
    logLanguageScore+=token.getLanguageScore();
    logInsertionScore+=token.getInsertionScore();
    token=token.getPredecessor();
  }
  return new Token(token,token.getScore(),logInsertionScore,logAcousticScore,logLanguageScore);
}
