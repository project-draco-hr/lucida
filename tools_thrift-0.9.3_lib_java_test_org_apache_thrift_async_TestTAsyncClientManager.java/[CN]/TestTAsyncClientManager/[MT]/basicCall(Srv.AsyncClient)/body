{
  final CountDownLatch latch=new CountDownLatch(1);
  final AtomicBoolean returned=new AtomicBoolean(false);
  client.Janky(1,new FailureLessCallback<Srv.AsyncClient.Janky_call>(){
    @Override public void onComplete(    Janky_call response){
      try {
        assertEquals(3,response.getResult());
        returned.set(true);
      }
 catch (      TException e) {
        fail(e);
      }
 finally {
        latch.countDown();
      }
    }
    @Override public void onError(    Exception exception){
      try {
        StringWriter sink=new StringWriter();
        exception.printStackTrace(new PrintWriter(sink,true));
        fail("unexpected onError with exception " + sink.toString());
      }
  finally {
        latch.countDown();
      }
    }
  }
);
  latch.await(100,TimeUnit.SECONDS);
  assertTrue(returned.get());
}
