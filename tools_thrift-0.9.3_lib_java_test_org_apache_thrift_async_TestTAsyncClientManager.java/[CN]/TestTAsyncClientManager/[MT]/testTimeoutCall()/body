{
  final CountDownLatch latch=new CountDownLatch(1);
  Srv.AsyncClient client=getClient();
  client.setTimeout(100);
  client.primitiveMethod(new AsyncMethodCallback<primitiveMethod_call>(){
    @Override public void onError(    Exception exception){
      try {
        if (!(exception instanceof TimeoutException)) {
          StringWriter sink=new StringWriter();
          exception.printStackTrace(new PrintWriter(sink,true));
          fail("expected TimeoutException but got " + sink.toString());
        }
      }
  finally {
        latch.countDown();
      }
    }
    @Override public void onComplete(    primitiveMethod_call response){
      try {
        fail("Should not have finished timed out call.");
      }
  finally {
        latch.countDown();
      }
    }
  }
);
  latch.await(2,TimeUnit.SECONDS);
  assertTrue(client.hasError());
  assertTrue(client.getError() instanceof TimeoutException);
}
