{
  Map<String,String[]> extracted=new Hashtable<String,String[]>();
  String[][] tokens=new String[1][];
  tokens[0]=NETagger.tokenize(sentence);
  for (  String answerType : answerTypes) {
    String[] neTypes=answerType.split("->");
    int neIds[]=new int[0];
    String neType="";
    for (    String thisType : neTypes) {
      int[] thisIds=NETagger.getNeIds(thisType);
      if (thisIds.length > 0) {
        neIds=thisIds;
        neType=thisType;
      }
    }
    for (    int neId : neIds) {
      String[][] nes=NETagger.extractNes(tokens,neId);
      for (int i=0; i < nes[0].length; i++)       nes[0][i]=OpenNLP.untokenize(nes[0][i],sentence);
      for (      String ne : nes[0]) {
        String[] types=extracted.get(ne);
        if (types != null) {
          boolean exists=false;
          for (          String existing : types)           if (neType.equals(existing)) {
            exists=true;
            break;
          }
          if (exists)           continue;
        }
        String[] newTypes;
        if (types == null) {
          newTypes=new String[1];
        }
 else {
          newTypes=new String[types.length + 1];
          for (int i=0; i < types.length; i++)           newTypes[i]=types[i];
        }
        newTypes[newTypes.length - 1]=neType;
        extracted.put(ne,newTypes);
      }
    }
  }
  return extracted;
}
