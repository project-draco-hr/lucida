{
  try {
    OpenNLP.createPosTagger("res/nlp/postagger/opennlp/tag.bin.gz","res/nlp/postagger/opennlp/tagdict");
    OpenNLP.createTokenizer("res/nlp/tokenizer/opennlp/EnglishTok.bin.gz");
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  TRECTarget[] targets=TREC13To16Parser.loadTargets("res/testdata/trec/trec15questions.xml");
  for (  TRECTarget target : targets) {
    TargetPreprocessor.preprocess(target);
    String t=target.getCondensedTarget();
    for (int i=0; i < ("Target: " + t).length(); i++) {
      System.out.print("=");
    }
    System.out.println();
    System.out.println("Target: " + t);
    for (int i=0; i < ("Target: " + t).length(); i++) {
      System.out.print("=");
    }
    System.out.println();
    for (int i=0; i < target.getQuestions().length; i++) {
      if (!target.getQuestions()[i].getQuestionString().equals("Other")) {
        System.out.println("Question:	" + target.getQuestions()[i].getQuestionString());
        CorefResolver.resolvePronounsToTarget(target,i);
        System.out.println("Resolved:	" + target.getQuestions()[i].getQuestionString());
      }
    }
    System.out.println();
  }
}
