{
  String qn=QuestionNormalizer.normalize(question);
  String stemmed=QuestionNormalizer.stemVerbsAndNouns(qn);
  MsgPrinter.printNormalization(stemmed);
  Logger.logNormalization(stemmed);
  String verbMod=(QuestionNormalizer.handleAuxiliaries(qn))[0];
  String[] kws=KeywordExtractor.getKeywords(verbMod,context);
  String[][] nes=TermExtractor.getNes(question,context);
  Term[] terms=TermExtractor.getTerms(verbMod,context,nes,dicts.toArray(new Dictionary[dicts.size()]));
  for (  Term term : terms)   term.setRelFrequency(WordFrequencies.lookupRel(term.getText()));
  String focus=FocusFinder.findFocusWord(question);
  String[] ats=getAtypes(question);
  MsgPrinter.printAnswerTypes(ats);
  Logger.logAnswerTypes(ats);
  QuestionInterpretation[] qis=QuestionInterpreter.interpret(qn,stemmed);
  MsgPrinter.printInterpretations(qis);
  Logger.logInterpretations(qis);
  Predicate[] ps=(predicates != null) ? predicates : PredicateExtractor.getPredicates(qn,verbMod,ats,terms);
  MsgPrinter.printPredicates(ps);
  Logger.logPredicates(ps);
  TermExpander.expandTerms(terms,ps,ontologies.toArray(new Ontology[ontologies.size()]));
  return new AnalyzedQuestion(question,qn,stemmed,verbMod,kws,nes,terms,focus,ats,qis,ps);
}
