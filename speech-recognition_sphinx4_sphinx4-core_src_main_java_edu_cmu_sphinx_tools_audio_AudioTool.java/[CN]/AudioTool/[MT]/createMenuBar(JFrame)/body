{
  JMenuBar menuBar=new JMenuBar();
  jframe.setJMenuBar(menuBar);
  JMenu menu=new JMenu("File");
  menuBar.add(menu);
  JMenuItem menuItem=new JMenuItem("Open...");
  menuItem.setAccelerator(KeyStroke.getKeyStroke("control O"));
  menuItem.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent evt){
      getFilename("Open...",JFileChooser.OPEN_DIALOG);
      if (filename == null || filename.isEmpty()) {
        return;
      }
      try {
        getAudioFromFile(filename);
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
    }
  }
);
  menu.add(menuItem);
  saveMenuItem=new JMenuItem("Save");
  saveMenuItem.setAccelerator(KeyStroke.getKeyStroke("control S"));
  saveMenuItem.setEnabled(false);
  saveMenuItem.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent evt){
      if (filename != null && !filename.isEmpty()) {
        try {
          Utils.writeRawFile(audio,filename);
          saveMenuItem.setEnabled(false);
        }
 catch (        IOException e) {
          e.printStackTrace();
        }
      }
    }
  }
);
  menu.add(saveMenuItem);
  menuItem=new JMenuItem("Save As...");
  menuItem.setAccelerator(KeyStroke.getKeyStroke("control V"));
  menuItem.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent evt){
      getFilename("Save As...",JFileChooser.SAVE_DIALOG);
      if (filename == null || filename.isEmpty()) {
        return;
      }
      try {
        Utils.writeRawFile(audio,filename);
        saveMenuItem.setEnabled(false);
      }
 catch (      IOException e) {
        e.printStackTrace();
      }
    }
  }
);
  menu.add(menuItem);
  menuItem=new JMenuItem("Quit");
  menuItem.setAccelerator(KeyStroke.getKeyStroke("control Q"));
  menuItem.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent evt){
      System.exit(0);
    }
  }
);
  menu.add(menuItem);
  menu=new JMenu("Edit");
  menuBar.add(menu);
  menuItem=new JMenuItem("Select All");
  menuItem.setAccelerator(KeyStroke.getKeyStroke("control A"));
  menuItem.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent evt){
      audioPanel.selectAll();
    }
  }
);
  menu.add(menuItem);
  menuItem=new JMenuItem("Crop");
  menuItem.setAccelerator(KeyStroke.getKeyStroke("control X"));
  menuItem.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent evt){
      audioPanel.crop();
    }
  }
);
  menu.add(menuItem);
  menu=new JMenu("View");
  menuBar.add(menu);
  menuItem=new JMenuItem("Zoom In");
  menuItem.setAccelerator(KeyStroke.getKeyStroke('>'));
  menuItem.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent evt){
      zoomIn();
    }
  }
);
  menu.add(menuItem);
  menuItem=new JMenuItem("Zoom Out");
  menuItem.setAccelerator(KeyStroke.getKeyStroke('<'));
  menuItem.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent evt){
      zoomOut();
    }
  }
);
  menu.add(menuItem);
  menuItem=new JMenuItem("Original Size");
  menuItem.setAccelerator(KeyStroke.getKeyStroke('!'));
  menuItem.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent evt){
      zoomReset();
    }
  }
);
  menu.add(menuItem);
  menu=new JMenu("Audio");
  menuBar.add(menu);
  menuItem=new JMenuItem("Play");
  menuItem.setAccelerator(KeyStroke.getKeyStroke("control P"));
  menuItem.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent evt){
      player.play(audioPanel.getSelectionStart(),audioPanel.getSelectionEnd());
    }
  }
);
  menu.add(menuItem);
  recordListener=new ActionListener(){
    public void actionPerformed(    ActionEvent evt){
      if (!recording) {
        recording=true;
        recorder.startRecording();
        recordButton.setText("Stop");
        saveMenuItem.setEnabled(true);
      }
 else {
        recording=false;
        recorder.stopRecording();
        audio.setAudioData(getRecordedAudio(recorder));
        recordButton.setText("Record");
        player.play(audioPanel.getSelectionStart(),audioPanel.getSelectionEnd());
      }
    }
  }
;
  menuItem=new JMenuItem("Record Start/Stop");
  menuItem.setAccelerator(KeyStroke.getKeyStroke("control R"));
  menuItem.addActionListener(recordListener);
  menu.add(menuItem);
}
