{
  float logDval1gauss=0f;
  for (int gidx=0; gidx < ngauss; gidx++) {
    logDval1gauss=0f;
    for (int i=0; i < data.length; i++) {
      float logDiff=data[i] - means[gidx][i];
      logDval1gauss+=logDiff * logDiff * covar[gidx][i];
    }
    logDval1gauss-=logPreComputedGaussianFactor[gidx];
    if (Float.isNaN(logDval1gauss)) {
      System.err.println("gs2 is Nan, converting to 0 debug " + gidx + ' '+ logPreComputedGaussianFactor[gidx]+ ' '+ means[gidx][0]+ ' '+ covar[gidx][0]);
      logDval1gauss=LogMath.LOG_ZERO;
    }
    if (logDval1gauss < distFloor) {
      logDval1gauss=distFloor;
    }
    loglikes[gidx]=weights[gidx] + logDval1gauss;
  }
}
