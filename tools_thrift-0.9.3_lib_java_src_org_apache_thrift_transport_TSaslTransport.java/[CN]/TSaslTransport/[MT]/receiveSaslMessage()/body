{
  underlyingTransport.readAll(messageHeader,0,messageHeader.length);
  byte statusByte=messageHeader[0];
  NegotiationStatus status=NegotiationStatus.byValue(statusByte);
  if (status == null) {
    throw sendAndThrowMessage(NegotiationStatus.ERROR,"Invalid status " + statusByte);
  }
  int payloadBytes=EncodingUtils.decodeBigEndian(messageHeader,STATUS_BYTES);
  if (payloadBytes < 0 || payloadBytes > 104857600) {
    throw sendAndThrowMessage(NegotiationStatus.ERROR,"Invalid payload header length: " + payloadBytes);
  }
  byte[] payload=new byte[payloadBytes];
  underlyingTransport.readAll(payload,0,payload.length);
  if (status == NegotiationStatus.BAD || status == NegotiationStatus.ERROR) {
    try {
      String remoteMessage=new String(payload,"UTF-8");
      throw new TTransportException("Peer indicated failure: " + remoteMessage);
    }
 catch (    UnsupportedEncodingException e) {
      throw new TTransportException(e);
    }
  }
  if (LOGGER.isDebugEnabled())   LOGGER.debug(getRole() + ": Received message with status {} and payload length {}",status,payload.length);
  return new SaslResponse(status,payload);
}
