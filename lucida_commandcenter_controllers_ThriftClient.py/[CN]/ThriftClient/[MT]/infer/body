def infer(self, LUCID, service_graph, text_data, image_data):
    query_input_list = []
    for node in service_graph.node_list:
        service = self.SERVICES[node.service_name]
        data = (text_data if (service.input_type == 'text') else image_data)
        (host, port) = service.get_host_port()
        tag_list = [host, str(port), str(len(node.to_indices))]
        for to_index in node.to_indices:
            tag_list.append(str(to_index))
        query_input_list.append(self.create_query_input(service.input_type, data, tag_list))
    query_spec = self.create_query_spec('query', query_input_list)
    result = []
    for start_index in service_graph.starting_indices:
        service = self.SERVICES[service_graph.get_node(start_index).service_name]
        (client, transport) = self.get_client_transport(service)
        log(('Sending infer request to ' + service.name))
        result.append(client.infer(str(LUCID), query_spec))
        transport.close()
    return ' '.join(result)
