{
  int port=8083;
  if (args.length >= 1) {
    port=Integer.parseInt(args[0]);
  }
  String LUCID="Johann";
  QuerySpec spec=new QuerySpec();
  final QueryInput knowledge_text=new QueryInput("text",new ArrayList<String>(){
{
      add("Today China???s population is over 1.4 billion," + " the largest of any country in the world.");
      add("The master branch tracks live changes by our engine team. This is the cutting edge and may be buggy - it may not even compile. Battle-hardened developers eager to work lock-step with us on the latest and greatest should head here.");
    }
  }
);
  final QueryInput knowledge_url=new QueryInput("file",new ArrayList<String>(){
{
      add("/home/yba/Documents/clarity/lucida/lucida/questionanswering/OpenEphyra/test.txt");
    }
  }
);
  QuerySpec knowledge=new QuerySpec(new ArrayList<QueryInput>(){
{
      add(knowledge_text);
      add(knowledge_url);
    }
  }
);
  final QueryInput query_input=new QueryInput("query",new ArrayList<String>(){
{
      add("Which branch tracks live changes by the engine team?");
    }
  }
);
  QuerySpec query=new QuerySpec(new ArrayList<QueryInput>(){
{
      add(query_input);
    }
  }
);
  TTransport transport=new TSocket("localhost",port);
  TProtocol protocol=new TBinaryProtocol(new TFramedTransport(transport));
  LucidaService.Client client=new LucidaService.Client(protocol);
  try {
    transport.open();
    System.out.println("///// Connecting to OpenEphyra at port " + port + " ... /////");
    client.learn(LUCID,knowledge);
    System.out.println("///// Query input: /////");
    System.out.println(query_input);
    String answer=client.infer(LUCID,query);
    System.out.println("///// Answer: /////");
    System.out.println(answer);
    transport.close();
  }
 catch (  TException x) {
    x.printStackTrace();
  }
}
