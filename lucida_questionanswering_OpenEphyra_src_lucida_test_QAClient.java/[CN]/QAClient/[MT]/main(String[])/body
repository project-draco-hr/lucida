{
  int port=8083;
  if (args.length >= 1) {
    port=Integer.parseInt(args[0]);
  }
  String LUCID="Clinc";
  QuerySpec create_spec=new QuerySpec();
  final QueryInput knowledge_text=createQueryInput("text","Clinc is created by Jason and Lingjia.","1234567");
  final QueryInput knowledge_url=createQueryInput("url","https://en.wikipedia.org/wiki/Apple_Inc.","abcdefg");
  final QuerySpec knowledge=createQuerySpec("knowledge",new ArrayList<QueryInput>(){
{
      add(knowledge_text);
      add(knowledge_url);
    }
  }
);
  final QueryInput knowledge_unlearn_input=createQueryInput("unlearn","abcdefg","");
  final QuerySpec knowledge_unlearn_spec=createQuerySpec("unlearn knowledge",new ArrayList<QueryInput>(){
{
      add(knowledge_unlearn_input);
    }
  }
);
  final QueryInput query_input=createQueryInput("text","Who created Clinc?","");
  final QuerySpec query=createQuerySpec("query",new ArrayList<QueryInput>(){
{
      add(query_input);
    }
  }
);
  TTransport transport=new TSocket("localhost",port);
  TProtocol protocol=new TBinaryProtocol(new TFramedTransport(transport));
  LucidaService.Client client=new LucidaService.Client(protocol);
  try {
    transport.open();
    System.out.println("///// Connecting to OpenEphyra at port " + port + " ... /////");
    client.create(LUCID,create_spec);
    client.learn(LUCID,knowledge);
    System.out.println("///// Query input: /////");
    System.out.println(query_input.data.get(0));
    String answer=client.infer(LUCID,query);
    System.out.println("///// Answer: /////");
    System.out.println(answer);
    client.learn(LUCID,knowledge_unlearn_spec);
    System.out.println("///// Query input: /////");
    System.out.println(query_input.data.get(0));
    answer=client.infer(LUCID,query);
    System.out.println("///// Answer: /////");
    System.out.println(answer);
    transport.close();
  }
 catch (  TException x) {
    x.printStackTrace();
  }
}
