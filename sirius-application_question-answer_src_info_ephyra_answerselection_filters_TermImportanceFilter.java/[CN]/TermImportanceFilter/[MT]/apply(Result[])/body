{
  HashMap<String,Integer> termCounters=new HashMap<String,Integer>();
  ArrayList<Result> rawResults=new ArrayList<Result>();
  int lengthSum=0;
  for (  Result r : results) {
    if (r.getScore() != Float.NEGATIVE_INFINITY) {
      String text=r.getAnswer();
      String[] sentence=NETagger.tokenize(text);
      lengthSum+=sentence.length;
      for (int i=0; i < sentence.length; i++) {
        String term=SnowballStemmer.stem(sentence[i].toLowerCase());
        if (term.length() > 1) {
          Integer count=(termCounters.containsKey(term) ? termCounters.get(term) : new Integer(0));
          termCounters.put(term,new Integer(count.intValue() + 1));
        }
      }
    }
  }
  for (  Result r : results) {
    if (r.getScore() != Float.NEGATIVE_INFINITY) {
      String text=r.getAnswer();
      String[] sentence=NETagger.tokenize(text);
      float importance=0;
      for (int i=0; i < sentence.length; i++) {
        String term=sentence[i];
        if ((term.length() > 1) && !StringUtils.isSubsetKeywords(term,r.getQuery().getAnalyzedQuestion().getQuestion()) && !FunctionWords.lookup(term)) {
          term=SnowballStemmer.stem(term.toLowerCase());
          Integer count=(termCounters.containsKey(term) ? termCounters.get(term) : new Integer(0));
          if (count.intValue() > Math.floor(Math.sqrt(results.length / 100)))           importance+=count.intValue();
        }
      }
      if (importance > 0) {
        r.incScore(importance);
        rawResults.add(r);
      }
    }
  }
  return rawResults.toArray(new Result[rawResults.size()]);
}
