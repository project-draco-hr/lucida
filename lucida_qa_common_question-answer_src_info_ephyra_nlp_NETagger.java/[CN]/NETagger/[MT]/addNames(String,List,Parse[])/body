{
  for (int i=0; i < names.size(); i++) {
    Span nameTokenSpan=(Span)names.get(i);
    Parse startToken=tokens[nameTokenSpan.getStart()];
    Parse endToken=tokens[nameTokenSpan.getEnd()];
    Parse commonP=startToken.getCommonParent(endToken);
    if (commonP != null) {
      Span nameSpan=new Span(startToken.getSpan().getStart(),endToken.getSpan().getEnd());
      if (nameSpan.equals(commonP.getSpan())) {
        commonP.insert(new Parse(commonP.getText(),nameSpan,tag,1.0));
      }
 else {
        Parse[] kids=commonP.getChildren();
        boolean crossingKids=false;
        for (int j=0; j < kids.length; j++)         if (nameSpan.crosses(kids[j].getSpan()))         crossingKids=true;
        if (!crossingKids) {
          commonP.insert(new Parse(commonP.getText(),nameSpan,tag,1.0));
        }
 else {
          if (commonP.getType().equals("NP")) {
            Parse[] grandKids=kids[0].getChildren();
            Parse last=grandKids[grandKids.length - 1];
            if (grandKids.length > 1 && nameSpan.contains(last.getSpan()))             commonP.insert(new Parse(commonP.getText(),commonP.getSpan(),tag,1.0));
          }
        }
      }
    }
  }
}
