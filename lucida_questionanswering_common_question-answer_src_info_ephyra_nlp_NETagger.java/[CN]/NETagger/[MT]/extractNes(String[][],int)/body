{
  if (neId < 0 || neId >= finderNames.length + allPatternNames.length + listNames.length+ stanfordNames.length)   return null;
  String[][] nes=new String[sentences.length][];
  if (neId < finderNames.length) {
    Map prevTokenMap=new HashMap();
    for (int s=0; s < sentences.length; s++) {
      String[] tokens=sentences[s];
      String[] tags=finders[neId].find(tokens,prevTokenMap);
      for (int i=0; i < tokens.length; i++)       prevTokenMap.put(tokens[i],tags[i]);
      ArrayList<String> neList=new ArrayList<String>();
      String ne="";
      for (int i=0; i < tokens.length; i++) {
        if ((tags[i].equals(NameFinderME.START) || tags[i].equals(NameFinderME.OTHER)) && ne.length() > 0) {
          neList.add(ne.trim());
          ne="";
        }
        if (tags[i].equals(NameFinderME.START))         ne=tokens[i];
        if (tags[i].equals(NameFinderME.CONTINUE))         ne+=" " + tokens[i];
      }
      if (ne.length() > 0)       neList.add(ne);
      nes[s]=neList.toArray(new String[neList.size()]);
    }
  }
 else {
    int i=neId - finderNames.length;
    if (i < allPatternNames.length) {
      Pattern regEx;
      if (i < patterns.length) {
        regEx=patterns[i];
      }
 else       if (i == patterns.length) {
        regEx=RegExMatcher.NUMBER_PATTERN;
      }
 else {
        regEx=quantityPatterns[i - patterns.length - 1];
      }
      for (int s=0; s < sentences.length; s++) {
        String sentence=StringUtils.concatWithSpaces(sentences[s]);
        nes[s]=RegExMatcher.extractAllMatches(sentence,regEx);
      }
    }
 else {
      i-=allPatternNames.length;
      if (i < listNames.length) {
        for (int s=0; s < sentences.length; s++)         nes[s]=RegExMatcher.extractAllContained(sentences[s],RegExMatcher.getDictionary(lists[i]),fuzzyListLookupThreshold);
      }
 else {
        i-=listNames.length;
        for (int s=0; s < sentences.length; s++) {
          HashMap<String,String[]> allStanfordNEs=StanfordNeTagger.extractNEs(StringUtils.concatWithSpaces(sentences[s]));
          String[] stanfordNEs=allStanfordNEs.get(stanfordNames[i]);
          if (stanfordNEs == null)           stanfordNEs=new String[0];
          nes[s]=stanfordNEs;
        }
      }
    }
  }
  return nes;
}
